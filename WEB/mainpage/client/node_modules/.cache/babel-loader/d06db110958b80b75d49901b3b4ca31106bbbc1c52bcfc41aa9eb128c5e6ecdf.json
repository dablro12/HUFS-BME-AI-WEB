{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yeongjin/HUFS-BME-AI-WEB/WEB/mainpage/client/src/App.js\";\n// import './App.css';\n// import Customer from './components/Customer';\n// import DataAdd from './components/DataAdd';\n\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import CircularProgress from '@mui/material/CircularProgress'; //로딩 중 일 때 동그란 원이 나타나느 라이브러리\n// import Paper from '@mui/material/Paper';\n// import React, { Component } from 'react';\n\n// //App Bar 구현 라이브러리들\n// import { styled, alpha } from '@mui/material/styles';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import InputBase from '@mui/material/InputBase';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import SearchIcon from '@mui/icons-material/Search';\n\n// const Search = styled('div')(({ theme }) => ({\n//   position: 'relative',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginLeft: 0,\n//   width: '100%',\n//   [theme.breakpoints.up('sm')]: {\n//     marginLeft: theme.spacing(1),\n//     width: 'auto',\n//   },\n// }));\n\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\n//   padding: theme.spacing(0, 2),\n//   height: '100%',\n//   position: 'absolute',\n//   pointerEvents: 'none',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n// }));\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   width: '100%',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     // vertical padding + font size from searchIcon\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     [theme.breakpoints.up('sm')]: {\n//       width: '12ch',\n//       '&:focus': {\n//         width: '20ch',\n//       },\n//     },\n//   },\n// }));\n\n// class App extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       imageData: '',\n//       completed: 0,  //로딩될때 동그란 원이 로딩중임을 나타낼때 사용하기 위한 변수\n//       searchKeyword: ''\n//     } \n//   }\n\n//   stateRefresh = () => {\n//     this.setState({\n//       imageData: '',\n//       completed: 0,\n//       searchKeyword: ''\n//     });\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   componentDidMount() { //서버 api에서 data를 받아오는 함수\n//     this.timer = setInterval(this.progress, 800); //1000이 1초 -> 20은 0.02초\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   callApi = async () => {\n//     const response = await fetch('/api/main'); //주소에서 데이터 받아옴\n//     const body = await response.json(); //받아온 데이터를 json형태로 body에 저정함\n//     return body;\n//   }\n\n//   progress = () => { //로딩하는 원에 대한 함수\n//     const { completed } = this.state;\n//     this.setState({ completed: completed >= 100 ? 0 : completed + 10 });\n//   }\n\n//   handleValueChange = (e) => {\n//     let nextState = {};\n//     nextState[e.target.name] = e.target.value;\n//     this.setState(nextState);\n//   }\n\n//   render() {\n//     const filteredComponents = (data) => {\n//       data = data.filter((c) => {\n//         return c.name.indexOf(this.state.searchKeyword) > -1;\n//       });\n//       return data.map((c) => {\n//         return <Customer stateRefresh={this.stateRefresh} key = {c.id} id = {c.id} image={c.image} inpainted={c.inpainted} name={c.name} explanation={c.explanation} />\n//       });\n//     }\n//     const cellList = [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"];\n//     return (\n//       <div style={{ marginLeft: 10, marginRight: 10 }}>\n//         <Box sx={{ flexGrow: 1 }}>\n//           <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n//             <Toolbar>\n//               <IconButton\n//                 size=\"large\"\n//                 edge=\"start\"\n//                 color=\"inherit\"\n//                 aria-label=\"open drawer\"\n//                 sx={{ mr: 2 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//               <Typography\n//                 variant=\"h6\"\n//                 noWrap\n//                 component=\"div\"\n//                 sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n//               >\n//                 Image Inpainting WEB\n//               </Typography>\n//               <Search>\n//                 <SearchIconWrapper>\n//                   <SearchIcon />\n//                 </SearchIconWrapper>\n//                 <StyledInputBase\n//                   placeholder=\"Search\"\n//                   inputProps={{ 'aria-label': 'search' }}\n//                   name=\"searchKeyword\"\n//                   value={this.state.searchKeyword}\n//                   onChange={this.handleValueChange}\n//                 />\n//               </Search>\n//             </Toolbar>\n//           </AppBar>\n//         </Box><br />\n//         <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.stateRefresh} />\n//         <br />\n\n//         <Paper sx={{ width: \"100%\" }}>\n//           <Table sx={{ minWidth: '1080px' }}>\n//             <TableHead>\n//               <TableRow>\n//                 {cellList.map(c => {\n//                   return <TableCell sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n//                 })}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {this.state.imageData ?\n//                 filteredComponents(this.state.imageData) :\n//                 <TableRow>\n//                   <TableCell colSpan=\"6\" align=\"center\">\n//                     <CircularProgress variant=\"determinate\" value={this.state.completed} />\n//                   </TableCell>\n//                 </TableRow>\n//               }\n//             </TableBody>\n//           </Table>\n//         </Paper>\n\n//       </div>\n\n//     );\n//   }\n// }\n\n// export default App;\n\nimport React from 'react';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.stateRefresh = () => {\n      this.setState({\n        imageData: '',\n        completed: 0,\n        searchKeyword: ''\n      });\n      this.callApi().then(res => this.setState({\n        imageData: res\n      })).catch(err => console.log(err));\n    };\n    this.callApi = async () => {\n      const response = await fetch('/api/main');\n      const body = await response.json();\n      return body;\n    };\n    this.progress = () => {\n      const {\n        completed\n      } = this.state;\n      this.setState({\n        completed: completed >= 100 ? 0 : completed + 10\n      });\n    };\n    this.handleValueChange = e => {\n      let nextState = {};\n      nextState[e.target.name] = e.target.value;\n      this.setState(nextState);\n    };\n    this.saveImage = () => {\n      const canvas = this.canvasRef.current;\n      const imageDataURL = canvas.toDataURL('image/png');\n      axios.post('/api/saveImage', {\n        imageDataURL,\n        imageName: this.state.selectedImageName\n      }).then(response => {\n        const maskImagePath = response.data.maskImagePath;\n        this.props.updateMaskImage(maskImagePath);\n        this.mergeImages(this.props.image, maskImagePath);\n        alert('이미지가 성공적으로 저장되었습니다.');\n      }).catch(error => {\n        console.error('이미지 저장 실패:', error);\n      });\n    };\n    this.mergeImages = (imagePath, maskImagePath) => {\n      axios.post('/api/mergeImages', {\n        imagePath,\n        maskImagePath\n      }).then(response => {\n        console.log('합쳐진 이미지 경로:', response.data);\n        const mergedImagePath = response.data.mergedImagePath;\n        this.saveMergedImage(mergedImagePath);\n      }).catch(error => {\n        console.error('이미지 합치기 실패:', error);\n      });\n    };\n    this.saveMergedImage = mergedImagePath => {\n      axios.post('/api/saveMergedImage', {\n        mergedImagePath,\n        imageName: this.state.selectedImageName\n      }).then(response => {\n        console.log('데이터베이스에 저장된 합쳐진 이미지 경로:', response.data);\n      }).catch(error => {\n        console.error('데이터베이스에 합쳐진 이미지 경로 저장 실패:', error);\n      });\n    };\n    this.state = {\n      imageData: '',\n      completed: 0,\n      searchKeyword: ''\n    };\n  }\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 800);\n    this.callApi().then(res => this.setState({\n      imageData: res\n    })).catch(err => console.log(err));\n  }\n  render() {\n    const filteredComponents = data => {\n      data = data.filter(c => {\n        return c.name.indexOf(this.state.searchKeyword) > -1;\n      });\n      return data.map(c => {\n        return /*#__PURE__*/_jsxDEV(Customer, {\n          stateRefresh: this.stateRefresh,\n          id: c.id,\n          image: c.image,\n          inpainted: c.inpainted,\n          name: c.name,\n          explanation: c.explanation\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 16\n        }, this);\n      });\n    };\n    const cellList = [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 10,\n        marginRight: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataAdd, {\n        style: {\n          marginTop: 20,\n          marginBottom: 20,\n          display: 'flex',\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        stateRefresh: this.stateRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: '1080px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: cellList.map(c => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    fontSize: '1.0rem'\n                  },\n                  children: c\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 26\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: this.state.imageData ? filteredComponents(this.state.imageData) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.saveImage,\n          variant: \"outlined\",\n          color: \"primary\",\n          style: {\n            fontSize: '1.0rem',\n            width: '200px',\n            height: '50px'\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","axios","Button","jsxDEV","_jsxDEV","App","Component","constructor","props","stateRefresh","setState","imageData","completed","searchKeyword","callApi","then","res","catch","err","console","log","response","fetch","body","json","progress","state","handleValueChange","e","nextState","target","name","value","saveImage","canvas","canvasRef","current","imageDataURL","toDataURL","post","imageName","selectedImageName","maskImagePath","data","updateMaskImage","mergeImages","image","alert","error","imagePath","mergedImagePath","saveMergedImage","componentDidMount","timer","setInterval","render","filteredComponents","filter","c","indexOf","map","Customer","id","inpainted","explanation","fileName","_jsxFileName","lineNumber","columnNumber","cellList","style","marginLeft","marginRight","children","DataAdd","marginTop","marginBottom","display","alignItems","justifyContent","Paper","sx","width","Table","minWidth","TableHead","TableRow","TableCell","fontSize","TableBody","onClick","variant","color","height"],"sources":["/Users/jeong-yeongjin/HUFS-BME-AI-WEB/WEB/mainpage/client/src/App.js"],"sourcesContent":["// import './App.css';\n// import Customer from './components/Customer';\n// import DataAdd from './components/DataAdd';\n\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import CircularProgress from '@mui/material/CircularProgress'; //로딩 중 일 때 동그란 원이 나타나느 라이브러리\n// import Paper from '@mui/material/Paper';\n// import React, { Component } from 'react';\n\n// //App Bar 구현 라이브러리들\n// import { styled, alpha } from '@mui/material/styles';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import InputBase from '@mui/material/InputBase';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import SearchIcon from '@mui/icons-material/Search';\n\n// const Search = styled('div')(({ theme }) => ({\n//   position: 'relative',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginLeft: 0,\n//   width: '100%',\n//   [theme.breakpoints.up('sm')]: {\n//     marginLeft: theme.spacing(1),\n//     width: 'auto',\n//   },\n// }));\n\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\n//   padding: theme.spacing(0, 2),\n//   height: '100%',\n//   position: 'absolute',\n//   pointerEvents: 'none',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n// }));\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   width: '100%',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     // vertical padding + font size from searchIcon\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     [theme.breakpoints.up('sm')]: {\n//       width: '12ch',\n//       '&:focus': {\n//         width: '20ch',\n//       },\n//     },\n//   },\n// }));\n\n\n// class App extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       imageData: '',\n//       completed: 0,  //로딩될때 동그란 원이 로딩중임을 나타낼때 사용하기 위한 변수\n//       searchKeyword: ''\n//     } \n//   }\n\n//   stateRefresh = () => {\n//     this.setState({\n//       imageData: '',\n//       completed: 0,\n//       searchKeyword: ''\n//     });\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   componentDidMount() { //서버 api에서 data를 받아오는 함수\n//     this.timer = setInterval(this.progress, 800); //1000이 1초 -> 20은 0.02초\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   callApi = async () => {\n//     const response = await fetch('/api/main'); //주소에서 데이터 받아옴\n//     const body = await response.json(); //받아온 데이터를 json형태로 body에 저정함\n//     return body;\n//   }\n\n//   progress = () => { //로딩하는 원에 대한 함수\n//     const { completed } = this.state;\n//     this.setState({ completed: completed >= 100 ? 0 : completed + 10 });\n//   }\n\n//   handleValueChange = (e) => {\n//     let nextState = {};\n//     nextState[e.target.name] = e.target.value;\n//     this.setState(nextState);\n//   }\n\n//   render() {\n//     const filteredComponents = (data) => {\n//       data = data.filter((c) => {\n//         return c.name.indexOf(this.state.searchKeyword) > -1;\n//       });\n//       return data.map((c) => {\n//         return <Customer stateRefresh={this.stateRefresh} key = {c.id} id = {c.id} image={c.image} inpainted={c.inpainted} name={c.name} explanation={c.explanation} />\n//       });\n//     }\n//     const cellList = [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"];\n//     return (\n//       <div style={{ marginLeft: 10, marginRight: 10 }}>\n//         <Box sx={{ flexGrow: 1 }}>\n//           <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n//             <Toolbar>\n//               <IconButton\n//                 size=\"large\"\n//                 edge=\"start\"\n//                 color=\"inherit\"\n//                 aria-label=\"open drawer\"\n//                 sx={{ mr: 2 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//               <Typography\n//                 variant=\"h6\"\n//                 noWrap\n//                 component=\"div\"\n//                 sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n//               >\n//                 Image Inpainting WEB\n//               </Typography>\n//               <Search>\n//                 <SearchIconWrapper>\n//                   <SearchIcon />\n//                 </SearchIconWrapper>\n//                 <StyledInputBase\n//                   placeholder=\"Search\"\n//                   inputProps={{ 'aria-label': 'search' }}\n//                   name=\"searchKeyword\"\n//                   value={this.state.searchKeyword}\n//                   onChange={this.handleValueChange}\n//                 />\n//               </Search>\n//             </Toolbar>\n//           </AppBar>\n//         </Box><br />\n//         <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.stateRefresh} />\n//         <br />\n\n//         <Paper sx={{ width: \"100%\" }}>\n//           <Table sx={{ minWidth: '1080px' }}>\n//             <TableHead>\n//               <TableRow>\n//                 {cellList.map(c => {\n//                   return <TableCell sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n//                 })}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {this.state.imageData ?\n//                 filteredComponents(this.state.imageData) :\n//                 <TableRow>\n//                   <TableCell colSpan=\"6\" align=\"center\">\n//                     <CircularProgress variant=\"determinate\" value={this.state.completed} />\n//                   </TableCell>\n//                 </TableRow>\n//               }\n//             </TableBody>\n//           </Table>\n//         </Paper>\n\n\n//       </div>\n\n//     );\n//   }\n// }\n\n// export default App;\n\nimport React from 'react';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageData: '',\n      completed: 0,  \n      searchKeyword: ''\n    } \n  }\n\n  stateRefresh = () => {\n    this.setState({\n      imageData: '',\n      completed: 0,\n      searchKeyword: ''\n    });\n    this.callApi()\n      .then(res => this.setState({ imageData: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidMount() { \n    this.timer = setInterval(this.progress, 800);\n    this.callApi()\n      .then(res => this.setState({ imageData: res }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/main');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 10 });\n  }\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  saveImage = () => {\n    const canvas = this.canvasRef.current;\n    const imageDataURL = canvas.toDataURL('image/png');\n    axios.post('/api/saveImage', { imageDataURL, imageName: this.state.selectedImageName })\n      .then((response) => {\n        const maskImagePath = response.data.maskImagePath;\n        this.props.updateMaskImage(maskImagePath);\n        this.mergeImages(this.props.image, maskImagePath);\n        alert('이미지가 성공적으로 저장되었습니다.');\n      })\n      .catch((error) => {\n        console.error('이미지 저장 실패:', error);\n      });\n  };\n\n  mergeImages = (imagePath, maskImagePath) => {\n    axios.post('/api/mergeImages', { imagePath, maskImagePath })\n      .then((response) => {\n        console.log('합쳐진 이미지 경로:', response.data);\n        const mergedImagePath = response.data.mergedImagePath;\n        this.saveMergedImage(mergedImagePath);\n      })\n      .catch((error) => {\n        console.error('이미지 합치기 실패:', error);\n      });\n  };\n\n  saveMergedImage = (mergedImagePath) => {\n    axios.post('/api/saveMergedImage', { mergedImagePath, imageName: this.state.selectedImageName })\n      .then((response) => {\n        console.log('데이터베이스에 저장된 합쳐진 이미지 경로:', response.data);\n      })\n      .catch((error) => {\n        console.error('데이터베이스에 합쳐진 이미지 경로 저장 실패:', error);\n      });\n  };\n\n  render() {\n    const filteredComponents = (data) => {\n      data = data.filter((c) => {\n        return c.name.indexOf(this.state.searchKeyword) > -1;\n      });\n      return data.map((c) => {\n        return <Customer stateRefresh={this.stateRefresh} key = {c.id} id = {c.id} image={c.image} inpainted={c.inpainted} name={c.name} explanation={c.explanation} />\n      });\n    }\n    const cellList = [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"];\n    return (\n      <div style={{ marginLeft: 10, marginRight: 10 }}>\n        <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.stateRefresh} />\n        <br />\n        <Paper sx={{ width: \"100%\" }}>\n          <Table sx={{ minWidth: '1080px' }}>\n            <TableHead>\n              <TableRow>\n                {cellList.map(c => {\n                  return <TableCell sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n                })}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.imageData ? filteredComponents(this.state.imageData) : null}\n            </TableBody>\n          </Table>\n        </Paper>\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 10 }}>\n          <Button onClick={this.saveImage} variant=\"outlined\" color=\"primary\" style={{ fontSize: '1.0rem', width: '200px', height: '50px' }}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,SAASL,KAAK,CAACM,SAAS,CAAC;EAChCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAQfC,YAAY,GAAG,MAAM;MACnB,IAAI,CAACC,QAAQ,CAAC;QACZC,SAAS,EAAE,EAAE;QACbC,SAAS,EAAE,CAAC;QACZC,a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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}