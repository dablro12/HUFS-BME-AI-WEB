{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/App.js\";\n// import './App.css';\n// import Customer from './components/Customer';\n// import DataAdd from './components/DataAdd';\n\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import CircularProgress from '@mui/material/CircularProgress'; //로딩 중 일 때 동그란 원이 나타나느 라이브러리\n// import Paper from '@mui/material/Paper';\n// import React, { Component } from 'react';\n\n// //App Bar 구현 라이브러리들\n// import { styled, alpha } from '@mui/material/styles';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import InputBase from '@mui/material/InputBase';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import SearchIcon from '@mui/icons-material/Search';\n// import Button from '@mui/material/Button'; \n\n// const Search = styled('div')(({ theme }) => ({\n//   position: 'relative',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginLeft: 0,\n//   width: '100%',\n//   [theme.breakpoints.up('sm')]: {\n//     marginLeft: theme.spacing(1),\n//     width: 'auto',\n//   },\n// }));\n\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\n//   padding: theme.spacing(0, 2),\n//   height: '100%',\n//   position: 'absolute',\n//   pointerEvents: 'none',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n// }));\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   width: '100%',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     // vertical padding + font size from searchIcon\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     [theme.breakpoints.up('sm')]: {\n//       width: '12ch',\n//       '&:focus': {\n//         width: '20ch',\n//       },\n//     },\n//   },\n// }));\n\n// class App extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       imageData: '',\n//       completed: 0,  //로딩될때 동그란 원이 로딩중임을 나타낼때 사용하기 위한 변수\n//       searchKeyword: ''\n//     } \n//   }\n\n//   stateRefresh = () => {\n//     this.setState({\n//       imageData: '',\n//       completed: 0,\n//       searchKeyword: ''\n//     });\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   componentDidMount() { //서버 api에서 data를 받아오는 함수\n//     this.timer = setInterval(this.progress, 800); //1000이 1초 -> 20은 0.02초\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   callApi = async () => {\n//     const response = await fetch('/api/main'); //주소에서 데이터 받아옴\n//     const body = await response.json(); //받아온 데이터를 json형태로 body에 저정함\n//     return body;\n//   }\n\n//   progress = () => { //로딩하는 원에 대한 함수\n//     const { completed } = this.state;\n//     this.setState({ completed: completed >= 100 ? 0 : completed + 10 });\n//   }\n\n//   handleValueChange = (e) => {\n//     let nextState = {};\n//     nextState[e.target.name] = e.target.value;\n//     this.setState(nextState);\n//   }\n\n//   handleInpainting = () => {\n//     // Inpainting 작업 시작 시 로딩 표시를 보이도록 설정\n//     this.setState({ loading: true, completed: 0 }); // completed 상태를 0으로 초기화\n\n//     fetch('/api/runInpaintingScript') // Inpainting 스크립트를 실행하는 요청을 보냄\n//       .then(response => {\n//         if (response.ok) {\n//           alert('Inpainting 작업이 성공적으로 실행되었습니다.');\n//           // Inpainting 작업이 완료된 후에 이미지 데이터를 다시 불러옴\n//           this.stateRefresh();\n//         } else {\n//           throw new Error('Inpainting 작업 실행에 실패했습니다.');\n//         }\n//       })\n//       .catch(error => {\n//         console.error('Inpainting 작업 실패:', error);\n//       })\n//       .finally(() => {\n//         // Inpainting 작업 완료 후 로딩 표시를 제거\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   render() {\n//     const filteredComponents = (data) => {\n//       data = data.filter((c) => {\n//         return c.name.indexOf(this.state.searchKeyword) > -1;\n//       });\n//       return data.map((c) => {\n//         return <Customer stateRefresh={this.stateRefresh} key = {c.id} id = {c.id} image={c.image} inpainted={c.image2} name={c.name} explanation={c.explanation} />\n//       });\n//     }\n//     const cellList = [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"];\n//     return (\n//       <div style={{ marginLeft: 10, marginRight: 10 }}>\n//         <Box sx={{ flexGrow: 1 }}>\n//           <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n//             <Toolbar>\n//               <IconButton\n//                 size=\"large\"\n//                 edge=\"start\"\n//                 color=\"inherit\"\n//                 aria-label=\"open drawer\"\n//                 sx={{ mr: 2 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//               <Typography\n//                 variant=\"h6\"\n//                 noWrap\n//                 component=\"div\"\n//                 sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n//               >\n//                 Image Inpainting WEB\n//               </Typography>\n//               <Search>\n//                 <SearchIconWrapper>\n//                   <SearchIcon />\n//                 </SearchIconWrapper>\n//                 <StyledInputBase\n//                   placeholder=\"Search\"\n//                   inputProps={{ 'aria-label': 'search' }}\n//                   name=\"searchKeyword\"\n//                   value={this.state.searchKeyword}\n//                   onChange={this.handleValueChange}\n//                 />\n//               </Search>\n//             </Toolbar>\n//           </AppBar>\n//         </Box><br />\n//         <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.stateRefresh} />\n\n//         <br />\n\n//         <Paper sx={{ width: \"100%\" }}>\n//           <Table sx={{ minWidth: '1080px' }}>\n//             <TableHead>\n//               <TableRow>\n//                 {cellList.map(c => {\n//                   return <TableCell sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n//                 })}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {this.state.imageData ?\n//                 filteredComponents(this.state.imageData) :\n//                 <TableRow>\n//                   <TableCell colSpan=\"6\" align=\"center\">\n//                     <CircularProgress variant=\"determinate\" value={this.state.completed} />\n//                   </TableCell>\n//                 </TableRow>\n//               }\n//             </TableBody>\n//           </Table>\n//         </Paper>\n//         <br/>\n//         <Button variant=\"contained\" color=\"primary\" onClick={this.handleInpainting} disabled={this.state.loading} >\n//           {this.state.loading ? 'Inpainting 작업 진행 중...' : 'Inpainting'}\n//         </Button>\n\n//       </div>\n\n//     );\n//   }\n// }\n\n// export default App;\n\nimport './App.css';\nimport Customer from './components/Customer';\nimport DataAdd from './components/DataAdd';\nimport Login from './components/Login';\nimport Signin from './components/Signin';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableBody from '@mui/material/TableBody';\nimport CircularProgress from '@mui/material/CircularProgress'; //로딩 중 일 때 동그란 원이 나타나느 라이브러리\nimport Paper from '@mui/material/Paper';\nimport React, { Component } from 'react';\n\n//App Bar 구현 라이브러리들\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = styled('div')(({\n  theme\n}) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\n  },\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(1),\n    width: 'auto'\n  }\n}));\n_c = Search;\nconst SearchIconWrapper = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}));\n_c2 = SearchIconWrapper;\nconst StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  color: 'inherit',\n  width: '100%',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\n_c3 = StyledInputBase;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.stateRefresh = () => {\n      this.setState({\n        imageData: '',\n        completed: 0,\n        searchKeyword: ''\n      });\n      this.callApi().then(res => this.setState({\n        imageData: res\n      })).catch(err => console.log(err));\n    };\n    this.callApi = async () => {\n      const response = await fetch('/api/main'); //주소에서 데이터 받아옴\n      const body = await response.json(); //받아온 데이터를 json형태로 body에 저정함\n      return body;\n    };\n    this.progress = () => {\n      //로딩하는 원에 대한 함수\n      const {\n        completed\n      } = this.state;\n      this.setState({\n        completed: completed >= 100 ? 0 : completed + 10\n      });\n    };\n    this.handleValueChange = e => {\n      let nextState = {};\n      nextState[e.target.name] = e.target.value;\n      this.setState(nextState);\n    };\n    this.handleInpainting = () => {\n      // Inpainting 작업 시작 시 로딩 표시를 보이도록 설정\n      this.setState({\n        loading: true,\n        completed: 0\n      }); // completed 상태를 0으로 초기화\n\n      fetch('/api/runInpaintingScript') // Inpainting 스크립트를 실행하는 요청을 보냄\n      .then(response => {\n        if (response.ok) {\n          alert('Inpainting 작업이 성공적으로 실행되었습니다.');\n          // Inpainting 작업이 완료된 후에 이미지 데이터를 다시 불러옴\n          this.stateRefresh();\n        } else {\n          alert('Error: Mask Image가 모두 있는지 확인하세요.');\n          throw new Error('Inpainting 작업 실행에 실패했습니다.');\n        }\n      }).catch(error => {\n        console.error('Inpainting 작업 실패:', error);\n      }).finally(() => {\n        // Inpainting 작업 완료 후 로딩 표시를 제거\n        this.setState({\n          loading: false\n        });\n      });\n    };\n    this.handleLogout = () => {\n      fetch(\"/logout\").then(res => res.json()).then(json => {\n        if (json.isSuccess === \"True\") {\n          this.setState({\n            mode: \"LOGIN\"\n          });\n          document.cookie = \"userLoggedIn=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        } else {\n          alert(json.isSuccess);\n        }\n      }).catch(error => {\n        console.error(\"로그아웃 오류:\", error);\n        this.setState({\n          mode: \"LOGIN\"\n        });\n        document.cookie = \"userLoggedIn=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n      });\n    };\n    this.state = {\n      imageData: '',\n      completed: 0,\n      //로딩될때 동그란 원이 로딩중임을 나타낼때 사용하기 위한 변수\n      searchKeyword: '',\n      mode: \"\"\n    };\n  }\n  componentDidMount() {\n    //서버 api에서 data를 받아오는 함수\n    fetch(\"/authcheck\").then(res => res.json()).then(json => {\n      if (json.isLogin === \"True\") {\n        this.setState({\n          mode: \"WELCOME\"\n        });\n      } else {\n        this.setState({\n          mode: \"LOGIN\"\n        });\n      }\n    });\n    this.timer = setInterval(this.progress, 800); //1000이 1초 -> 20은 0.02초\n    this.callApi().then(res => this.setState({\n      imageData: res\n    })).catch(err => console.log(err));\n  }\n  render() {\n    let content = null;\n    const filteredComponents = data => {\n      data = data.filter(c => {\n        return c.name.indexOf(this.state.searchKeyword) > -1;\n      });\n      return data.map((c, index) => {\n        return /*#__PURE__*/_jsxDEV(Customer, {\n          stateRefresh: this.stateRefresh,\n          num: index + 1,\n          id: c.id,\n          image: c.image,\n          inpainted: c.image2,\n          mask: c.mask,\n          name: c.name,\n          explanation: c.explanation\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 16\n        }, this);\n      });\n    };\n    const cellList = [\"Number\", \"Original Image\", \"Mask Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"];\n    if (this.state.mode === \"LOGIN\") {\n      content = /*#__PURE__*/_jsxDEV(Login, {\n        setMode: mode => this.setState({\n          mode\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this);\n    } else if (this.state.mode === 'SIGNIN') {\n      content = /*#__PURE__*/_jsxDEV(Signin, {\n        setMode: mode => this.setState({\n          mode\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this);\n    } else if (this.state.mode === 'WELCOME') {\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 10,\n            marginRight: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(AppBar, {\n              position: \"static\",\n              sx: {\n                minWidth: '1080px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Toolbar, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"large\",\n                  edge: \"start\",\n                  color: \"inherit\",\n                  \"aria-label\": \"open drawer\",\n                  sx: {\n                    mr: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  noWrap: true,\n                  component: \"div\",\n                  sx: {\n                    flexGrow: 1,\n                    display: {\n                      xs: 'none',\n                      sm: 'block'\n                    }\n                  },\n                  children: \"Image Inpainting WEB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Search, {\n                  children: [/*#__PURE__*/_jsxDEV(SearchIconWrapper, {\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(StyledInputBase, {\n                    placeholder: \"Search\",\n                    inputProps: {\n                      'aria-label': 'search'\n                    },\n                    name: \"searchKeyword\",\n                    value: this.state.searchKeyword,\n                    onChange: this.handleValueChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 17\n                }, this), \" \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: this.handleLogout,\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DataAdd, {\n            style: {\n              marginTop: 20,\n              marginBottom: 20,\n              display: 'flex',\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            stateRefresh: this.stateRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: '1080px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: cellList.map(c => {\n                    return /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontSize: '1.0rem'\n                      },\n                      children: c\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 28\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: this.state.imageData ? filteredComponents(this.state.imageData) : /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: \"6\",\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      variant: \"determinate\",\n                      value: this.state.completed\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.handleInpainting,\n            disabled: this.state.loading,\n            children: this.state.loading ? 'Inpainting 작업 진행 중...' : 'Inpainting'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"SearchIconWrapper\");\n$RefreshReg$(_c3, \"StyledInputBase\");","map":{"version":3,"names":["Customer","DataAdd","Login","Signin","TableRow","TableCell","Table","TableHead","TableBody","CircularProgress","Paper","React","Component","styled","alpha","AppBar","Box","Toolbar","IconButton","Typography","InputBase","MenuIcon","SearchIcon","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","theme","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","_c","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","_c2","StyledInputBase","color","paddingLeft","transition","transitions","create","_c3","App","constructor","props","stateRefresh","setState","imageData","completed","searchKeyword","callApi","then","res","catch","err","console","log","response","fetch","body","json","progress","state","handleValueChange","e","nextState","target","name","value","handleInpainting","loading","ok","alert","Error","error","finally","handleLogout","isSuccess","mode","document","cookie","componentDidMount","isLogin","timer","setInterval","render","content","filteredComponents","data","filter","c","indexOf","map","index","num","id","image","inpainted","image2","mask","explanation","fileName","_jsxFileName","lineNumber","columnNumber","cellList","setMode","children","style","marginRight","sx","flexGrow","minWidth","size","edge","mr","variant","noWrap","component","xs","sm","placeholder","inputProps","onChange","onClick","marginTop","marginBottom","fontSize","colSpan","align","disabled","$RefreshReg$"],"sources":["/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/App.js"],"sourcesContent":["// import './App.css';\n// import Customer from './components/Customer';\n// import DataAdd from './components/DataAdd';\n\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import CircularProgress from '@mui/material/CircularProgress'; //로딩 중 일 때 동그란 원이 나타나느 라이브러리\n// import Paper from '@mui/material/Paper';\n// import React, { Component } from 'react';\n\n// //App Bar 구현 라이브러리들\n// import { styled, alpha } from '@mui/material/styles';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import InputBase from '@mui/material/InputBase';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import SearchIcon from '@mui/icons-material/Search';\n// import Button from '@mui/material/Button'; \n\n// const Search = styled('div')(({ theme }) => ({\n//   position: 'relative',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginLeft: 0,\n//   width: '100%',\n//   [theme.breakpoints.up('sm')]: {\n//     marginLeft: theme.spacing(1),\n//     width: 'auto',\n//   },\n// }));\n\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\n//   padding: theme.spacing(0, 2),\n//   height: '100%',\n//   position: 'absolute',\n//   pointerEvents: 'none',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n// }));\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   width: '100%',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     // vertical padding + font size from searchIcon\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     [theme.breakpoints.up('sm')]: {\n//       width: '12ch',\n//       '&:focus': {\n//         width: '20ch',\n//       },\n//     },\n//   },\n// }));\n\n\n// class App extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       imageData: '',\n//       completed: 0,  //로딩될때 동그란 원이 로딩중임을 나타낼때 사용하기 위한 변수\n//       searchKeyword: ''\n//     } \n//   }\n\n//   stateRefresh = () => {\n//     this.setState({\n//       imageData: '',\n//       completed: 0,\n//       searchKeyword: ''\n//     });\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   componentDidMount() { //서버 api에서 data를 받아오는 함수\n//     this.timer = setInterval(this.progress, 800); //1000이 1초 -> 20은 0.02초\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   callApi = async () => {\n//     const response = await fetch('/api/main'); //주소에서 데이터 받아옴\n//     const body = await response.json(); //받아온 데이터를 json형태로 body에 저정함\n//     return body;\n//   }\n\n//   progress = () => { //로딩하는 원에 대한 함수\n//     const { completed } = this.state;\n//     this.setState({ completed: completed >= 100 ? 0 : completed + 10 });\n//   }\n\n//   handleValueChange = (e) => {\n//     let nextState = {};\n//     nextState[e.target.name] = e.target.value;\n//     this.setState(nextState);\n//   }\n\n//   handleInpainting = () => {\n//     // Inpainting 작업 시작 시 로딩 표시를 보이도록 설정\n//     this.setState({ loading: true, completed: 0 }); // completed 상태를 0으로 초기화\n  \n//     fetch('/api/runInpaintingScript') // Inpainting 스크립트를 실행하는 요청을 보냄\n//       .then(response => {\n//         if (response.ok) {\n//           alert('Inpainting 작업이 성공적으로 실행되었습니다.');\n//           // Inpainting 작업이 완료된 후에 이미지 데이터를 다시 불러옴\n//           this.stateRefresh();\n//         } else {\n//           throw new Error('Inpainting 작업 실행에 실패했습니다.');\n//         }\n//       })\n//       .catch(error => {\n//         console.error('Inpainting 작업 실패:', error);\n//       })\n//       .finally(() => {\n//         // Inpainting 작업 완료 후 로딩 표시를 제거\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   render() {\n//     const filteredComponents = (data) => {\n//       data = data.filter((c) => {\n//         return c.name.indexOf(this.state.searchKeyword) > -1;\n//       });\n//       return data.map((c) => {\n//         return <Customer stateRefresh={this.stateRefresh} key = {c.id} id = {c.id} image={c.image} inpainted={c.image2} name={c.name} explanation={c.explanation} />\n//       });\n//     }\n//     const cellList = [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"];\n//     return (\n//       <div style={{ marginLeft: 10, marginRight: 10 }}>\n//         <Box sx={{ flexGrow: 1 }}>\n//           <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n//             <Toolbar>\n//               <IconButton\n//                 size=\"large\"\n//                 edge=\"start\"\n//                 color=\"inherit\"\n//                 aria-label=\"open drawer\"\n//                 sx={{ mr: 2 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//               <Typography\n//                 variant=\"h6\"\n//                 noWrap\n//                 component=\"div\"\n//                 sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n//               >\n//                 Image Inpainting WEB\n//               </Typography>\n//               <Search>\n//                 <SearchIconWrapper>\n//                   <SearchIcon />\n//                 </SearchIconWrapper>\n//                 <StyledInputBase\n//                   placeholder=\"Search\"\n//                   inputProps={{ 'aria-label': 'search' }}\n//                   name=\"searchKeyword\"\n//                   value={this.state.searchKeyword}\n//                   onChange={this.handleValueChange}\n//                 />\n//               </Search>\n//             </Toolbar>\n//           </AppBar>\n//         </Box><br />\n//         <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.stateRefresh} />\n        \n//         <br />\n\n//         <Paper sx={{ width: \"100%\" }}>\n//           <Table sx={{ minWidth: '1080px' }}>\n//             <TableHead>\n//               <TableRow>\n//                 {cellList.map(c => {\n//                   return <TableCell sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n//                 })}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {this.state.imageData ?\n//                 filteredComponents(this.state.imageData) :\n//                 <TableRow>\n//                   <TableCell colSpan=\"6\" align=\"center\">\n//                     <CircularProgress variant=\"determinate\" value={this.state.completed} />\n//                   </TableCell>\n//                 </TableRow>\n//               }\n//             </TableBody>\n//           </Table>\n//         </Paper>\n//         <br/>\n//         <Button variant=\"contained\" color=\"primary\" onClick={this.handleInpainting} disabled={this.state.loading} >\n//           {this.state.loading ? 'Inpainting 작업 진행 중...' : 'Inpainting'}\n//         </Button>\n\n\n\n//       </div>\n\n//     );\n//   }\n// }\n\n// export default App;\n\nimport './App.css';\nimport Customer from './components/Customer';\nimport DataAdd from './components/DataAdd';\nimport Login from './components/Login';\nimport Signin from './components/Signin';\n\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableBody from '@mui/material/TableBody';\nimport CircularProgress from '@mui/material/CircularProgress'; //로딩 중 일 때 동그란 원이 나타나느 라이브러리\nimport Paper from '@mui/material/Paper';\nimport React, { Component } from 'react';\n\n//App Bar 구현 라이브러리들\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Button from '@mui/material/Button'; \n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(1),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  width: '100%',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageData: '',\n      completed: 0,  //로딩될때 동그란 원이 로딩중임을 나타낼때 사용하기 위한 변수\n      searchKeyword: '',\n      mode: \"\"\n    } \n  }\n\n  stateRefresh = () => {\n    this.setState({\n      imageData: '',\n      completed: 0,\n      searchKeyword: ''\n    });\n    this.callApi()\n      .then(res => this.setState({ imageData: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidMount() { //서버 api에서 data를 받아오는 함수\n    fetch(\"/authcheck\")\n      .then((res) => res.json())\n      .then((json) => {        \n        if (json.isLogin === \"True\") {\n          this.setState({ mode: \"WELCOME\" });\n        } else {\n          this.setState({ mode: \"LOGIN\" });\n        }\n      });\n    this.timer = setInterval(this.progress, 800); //1000이 1초 -> 20은 0.02초\n    this.callApi()\n      .then(res => this.setState({ imageData: res }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/main'); //주소에서 데이터 받아옴\n    const body = await response.json(); //받아온 데이터를 json형태로 body에 저정함\n    return body;\n  }\n\n  progress = () => { //로딩하는 원에 대한 함수\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 10 });\n  }\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  handleInpainting = () => {\n    // Inpainting 작업 시작 시 로딩 표시를 보이도록 설정\n    this.setState({ loading: true, completed: 0 }); // completed 상태를 0으로 초기화\n  \n    fetch('/api/runInpaintingScript') // Inpainting 스크립트를 실행하는 요청을 보냄\n      .then(response => {\n        if (response.ok) {\n          alert('Inpainting 작업이 성공적으로 실행되었습니다.');\n          // Inpainting 작업이 완료된 후에 이미지 데이터를 다시 불러옴\n          this.stateRefresh();\n        } else {\n          alert('Error: Mask Image가 모두 있는지 확인하세요.');\n          throw new Error('Inpainting 작업 실행에 실패했습니다.');\n        }\n      })\n      .catch(error => {\n        console.error('Inpainting 작업 실패:', error);\n      })\n      .finally(() => {\n        // Inpainting 작업 완료 후 로딩 표시를 제거\n        this.setState({ loading: false });\n      });\n  }\n  handleLogout = () => {\n    fetch(\"/logout\")\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.isSuccess === \"True\") {\n          this.setState({ mode: \"LOGIN\" });\n          document.cookie = \"userLoggedIn=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        } else {\n          alert(json.isSuccess);\n        }\n      })\n      .catch((error) => {\n        console.error(\"로그아웃 오류:\", error);\n        this.setState({ mode: \"LOGIN\" });\n        document.cookie = \"userLoggedIn=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n      });\n  };\n\n  render() {\n    let content = null;  \n\n    const filteredComponents = (data) => {\n      data = data.filter((c) => {\n        return c.name.indexOf(this.state.searchKeyword) > -1;\n      });\n      return data.map((c,index) => {\n        return <Customer stateRefresh={this.stateRefresh} key = {index + 1} num = {index + 1 } id = {c.id} image={c.image} inpainted={c.image2} mask={c.mask} name={c.name} explanation={c.explanation} />\n      });\n    }\n    const cellList = [\"Number\", \"Original Image\", \"Mask Image\", \"Inpainted Image\",\"Name\", \"Explanation\", \"Setting\"];\n\n    if(this.state.mode === \"LOGIN\"){\n      content = <Login setMode={mode => this.setState({ mode })} /> \n    } else if (this.state.mode === 'SIGNIN') {\n      content = <Signin setMode={mode => this.setState({ mode })} /> \n    } else if (this.state.mode === 'WELCOME') {\n      content = <>\n        <div style={{ marginLeft: 10, marginRight: 10 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n              <Toolbar>\n                <IconButton\n                  size=\"large\"\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  sx={{ mr: 2 }}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography\n                  variant=\"h6\"\n                  noWrap\n                  component=\"div\"\n                  sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n                >\n                  Image Inpainting WEB\n                </Typography>\n                <Search>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    name=\"searchKeyword\"\n                    value={this.state.searchKeyword}\n                    onChange={this.handleValueChange}\n                  />\n                \n                </Search> &nbsp;&nbsp;\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.handleLogout} >\n                  Logout\n                </Button>\n              </Toolbar>\n            </AppBar>\n          </Box><br />\n          <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.stateRefresh} />\n          \n          <br />\n\n          <Paper sx={{ width: \"100%\" }}>\n            <Table sx={{ minWidth: '1080px' }}>\n              <TableHead>\n                <TableRow>\n                  {cellList.map(c => {\n                    return <TableCell sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n                  })}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.imageData ?\n                  filteredComponents(this.state.imageData) :\n                  <TableRow>\n                    <TableCell colSpan=\"6\" align=\"center\">\n                      <CircularProgress variant=\"determinate\" value={this.state.completed} />\n                    </TableCell>\n                  </TableRow>\n                }\n              </TableBody>\n            </Table>\n          </Paper>\n          <br/>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleInpainting} disabled={this.state.loading} >\n            {this.state.loading ? 'Inpainting 작업 진행 중...' : 'Inpainting'}\n          </Button>\n       \n          \n\n\n\n        </div>\n        \n      </>\n    }\n    return (\n      <>\n        <div>\n          {content}\n        </div>\n      </>\n    );\n\n  \n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AAExC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,M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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}