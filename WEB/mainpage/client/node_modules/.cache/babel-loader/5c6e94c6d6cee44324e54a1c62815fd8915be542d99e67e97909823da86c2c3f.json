{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yeongjin/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Canvas.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.initializeCanvas = () => {\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      canvas.width = this.props.imageWidth;\n      canvas.height = this.props.imageHeight;\n      const backgroundImage = new Image();\n      backgroundImage.src = this.props.backgroundImage;\n      backgroundImage.onload = () => {\n        ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\n      };\n      canvas.addEventListener('mousedown', this.handleMouseDown);\n      canvas.addEventListener('mousemove', this.handleMouseMove);\n      canvas.addEventListener('mouseup', this.handleMouseUp);\n      canvas.addEventListener('mouseout', this.handleMouseOut);\n    };\n    this.handleMouseDown = e => {\n      this.startDrawing(e);\n    };\n    this.handleMouseMove = e => {\n      this.draw(e);\n    };\n    this.handleMouseUp = () => {\n      this.stopDrawing();\n    };\n    this.handleMouseOut = () => {\n      this.stopDrawing();\n    };\n    this.startDrawing = e => {\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const {\n        penWidth\n      } = this.state;\n      ctx.lineWidth = penWidth;\n      ctx.lineCap = 'round';\n      ctx.strokeStyle = 'rgba(0, 128, 0, 0.5)'; // 반투명한 초록색\n      ctx.globalAlpha = 0.7; // 투명도 설정\n      ctx.beginPath();\n      this.setState({\n        isDrawing: true,\n        lastX: e.offsetX,\n        lastY: e.offsetY\n      });\n      ctx.moveTo(e.offsetX, e.offsetY);\n    };\n    this.draw = e => {\n      const {\n        isDrawing,\n        lastX,\n        lastY\n      } = this.state;\n      if (!isDrawing) return;\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.lineTo(e.offsetX, e.offsetY);\n      ctx.stroke();\n      this.setState({\n        lastX: e.offsetX,\n        lastY: e.offsetY\n      });\n\n      // 새로운 선을 시작\n      ctx.beginPath();\n      ctx.moveTo(e.offsetX, e.offsetY);\n    };\n    this.stopDrawing = () => {\n      this.setState({\n        isDrawing: false\n      });\n    };\n    this.clearDrawing = () => {\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      this.initializeCanvas();\n    };\n    this.setPenWidth = width => {\n      this.setState({\n        penWidth: width\n      });\n    };\n    this.state = {\n      penWidth: 5,\n      isDrawing: false,\n      lastX: 0,\n      lastY: 0\n    };\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    this.initializeCanvas();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: this.canvasRef,\n        style: {\n          border: '1px solid #000'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.clearDrawing,\n          children: \"Clear Drawing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"100\",\n          value: this.state.penWidth,\n          onChange: e => this.setPenWidth(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Canvas;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Canvas","constructor","props","initializeCanvas","canvas","canvasRef","current","ctx","getContext","width","imageWidth","height","imageHeight","backgroundImage","Image","src","onload","drawImage","addEventListener","handleMouseDown","handleMouseMove","handleMouseUp","handleMouseOut","e","startDrawing","draw","stopDrawing","penWidth","state","lineWidth","lineCap","strokeStyle","globalAlpha","beginPath","setState","isDrawing","lastX","offsetX","lastY","offsetY","moveTo","lineTo","stroke","clearDrawing","clearRect","setPenWidth","createRef","componentDidMount","render","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onClick","type","min","max","value","onChange","target"],"sources":["/Users/jeong-yeongjin/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Canvas.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      penWidth: 5,\n      isDrawing: false,\n      lastX: 0,\n      lastY: 0,\n    };\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.initializeCanvas();\n  }\n\n  initializeCanvas = () => {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = this.props.imageWidth;\n    canvas.height = this.props.imageHeight;\n\n    const backgroundImage = new Image();\n    backgroundImage.src = this.props.backgroundImage;\n    backgroundImage.onload = () => {\n      ctx.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\n    };\n\n    canvas.addEventListener('mousedown', this.handleMouseDown);\n    canvas.addEventListener('mousemove', this.handleMouseMove);\n    canvas.addEventListener('mouseup', this.handleMouseUp);\n    canvas.addEventListener('mouseout', this.handleMouseOut);\n  };\n\n  handleMouseDown = (e) => {\n    this.startDrawing(e);\n  };\n\n  handleMouseMove = (e) => {\n    this.draw(e);\n  };\n\n  handleMouseUp = () => {\n    this.stopDrawing();\n  };\n\n  handleMouseOut = () => {\n    this.stopDrawing();\n  };\n\n  startDrawing = (e) => {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { penWidth } = this.state;\n\n    ctx.lineWidth = penWidth;\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'rgba(0, 128, 0, 0.5)'; // 반투명한 초록색\n    ctx.globalAlpha = 0.7; // 투명도 설정\n    ctx.beginPath();\n\n    this.setState({\n      isDrawing: true,\n      lastX: e.offsetX,\n      lastY: e.offsetY,\n    });\n\n    ctx.moveTo(e.offsetX, e.offsetY);\n  };\n\n  draw = (e) => {\n    const { isDrawing, lastX, lastY } = this.state;\n    if (!isDrawing) return;\n\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    ctx.lineTo(e.offsetX, e.offsetY);\n    ctx.stroke();\n\n    this.setState({\n      lastX: e.offsetX,\n      lastY: e.offsetY,\n    });\n\n    // 새로운 선을 시작\n    ctx.beginPath();\n    ctx.moveTo(e.offsetX, e.offsetY);\n  };\n\n  stopDrawing = () => {\n    this.setState({ isDrawing: false });\n  };\n\n  clearDrawing = () => {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.initializeCanvas();\n  };\n\n  setPenWidth = (width) => {\n    this.setState({ penWidth: width });\n  };\n\n  render() {\n    return (\n      <div>\n        <canvas\n          ref={this.canvasRef}\n          style={{ border: '1px solid #000' }}\n        ></canvas>\n        <div style={{ marginTop: '10px' }}>\n          <button onClick={this.clearDrawing}>Clear Drawing</button>\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"100\"\n            value={this.state.penWidth}\n            onChange={(e) => this.setPenWidth(e.target.value)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}