{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Signin.js\";\n// import React, { Component } from 'react';\n// import './Login.css';\n\n// class Signin extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       id: \"\",\n//       password: \"\",\n//       password2: \"\"\n//     };\n//   }\n\n//   handleChange = (event) => {\n//     const { name, value } = event.target;\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = () => {\n//     const { id, password, password2 } = this.state;\n//     if (password !== password2) {\n//       alert(\"비밀번호가 일치하지 않습니다.\");\n//       return;\n//     }\n\n//     const userData = {\n//       userId: id,\n//       userPassword: password,\n//       userPassword2: password2,\n//     };\n//     fetch(\"/signin\", {\n//       method: \"post\",\n//       headers: {\n//         \"content-type\": \"application/json\",\n//       },\n//       body: JSON.stringify(userData),\n//     })\n//       .then((res) => res.json())\n//       .then((json) => {\n//         if(json.isSuccess === \"True\"){\n//           alert('회원가입이 완료되었습니다!')\n//           this.props.setMode(\"LOGIN\");\n//         } else{\n//           alert(json.isSuccess);\n//         }\n//       });\n//   };\n\n//   render() {\n//     const { id, password, password2 } = this.state;\n//     return (\n//       <>\n//         <h2 className=\"form\">회원가입</h2>\n\n//         <div className=\"form\">\n//           <p>\n//             <input\n//               className=\"login\"\n//               type=\"text\"\n//               name=\"id\"\n//               value={id}\n//               placeholder=\"아이디\"\n//               onChange={this.handleChange}\n//             />\n//           </p>\n//           <p>\n//             <input\n//               className=\"login\"\n//               type=\"password\"\n//               name=\"password\"\n//               value={password}\n//               placeholder=\"비밀번호\"\n//               onChange={this.handleChange}\n//             />\n//           </p>\n//           <p>\n//             <input\n//               className=\"login\"\n//               type=\"password\"\n//               name=\"password2\"\n//               value={password2}\n//               placeholder=\"비밀번호 확인\"\n//               onChange={this.handleChange}\n//             />\n//           </p>\n\n//           <p>\n//             <input\n//               className=\"btn\"\n//               type=\"submit\"\n//               value=\"회원가입\"\n//               onClick={this.handleSubmit}\n//             />\n//           </p>\n//         </div>\n\n//         <p className=\"form\">\n//           로그인화면으로 돌아가기  \n//           <button onClick={() => this.props.setMode(\"LOGIN\")}>로그인</button>\n//         </p>\n//       </>\n//     ); \n//   }\n// }\n\n// export default Signin;\n\nimport React, { Component } from 'react';\nimport './Login.css';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleSubmit = () => {\n      const {\n        id,\n        password,\n        password2\n      } = this.state;\n      if (password !== password2) {\n        alert(\"비밀번호가 일치하지 않습니다.\");\n        return;\n      }\n      const userData = {\n        userId: id,\n        userPassword: password,\n        userPassword2: password2\n      };\n      fetch(\"/signin\", {\n        method: \"post\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      }).then(res => res.json()).then(json => {\n        if (json.isSuccess === \"True\") {\n          alert('회원가입이 완료되었습니다!');\n          this.props.setMode(\"LOGIN\");\n        } else {\n          alert(json.isSuccess);\n        }\n      });\n    };\n    this.state = {\n      id: \"\",\n      password: \"\",\n      password2: \"\"\n    };\n  }\n  render() {\n    const {\n      id,\n      password,\n      password2\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"form\",\n        component: \"form\",\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"login\",\n          type: \"text\",\n          name: \"id\",\n          value: id,\n          label: \"\\uC544\\uC774\\uB514\",\n          variant: \"outlined\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"login\",\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          variant: \"outlined\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"login\",\n          type: \"password\",\n          name: \"password2\",\n          value: password2,\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n          variant: \"outlined\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn\",\n            variant: \"contained\",\n            onClick: this.handleSubmit,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form\",\n        children: [\"\\uB85C\\uADF8\\uC778\\uD654\\uBA74\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.props.setMode(\"LOGIN\"),\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Signin;","map":{"version":3,"names":["React","Component","TextField","Button","Box","jsxDEV","_jsxDEV","Signin","constructor","props","handleChange","event","name","value","target","setState","handleSubmit","id","password","password2","state","alert","userData","userId","userPassword","userPassword2","fetch","method","headers","body","JSON","stringify","then","res","json","isSuccess","setMode","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","component","noValidate","autoComplete","type","label","variant","onChange","textAlign","mt","onClick"],"sources":["/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Signin.js"],"sourcesContent":["// import React, { Component } from 'react';\n// import './Login.css';\n\n// class Signin extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       id: \"\",\n//       password: \"\",\n//       password2: \"\"\n//     };\n//   }\n\n//   handleChange = (event) => {\n//     const { name, value } = event.target;\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = () => {\n//     const { id, password, password2 } = this.state;\n//     if (password !== password2) {\n//       alert(\"비밀번호가 일치하지 않습니다.\");\n//       return;\n//     }\n\n//     const userData = {\n//       userId: id,\n//       userPassword: password,\n//       userPassword2: password2,\n//     };\n//     fetch(\"/signin\", {\n//       method: \"post\",\n//       headers: {\n//         \"content-type\": \"application/json\",\n//       },\n//       body: JSON.stringify(userData),\n//     })\n//       .then((res) => res.json())\n//       .then((json) => {\n//         if(json.isSuccess === \"True\"){\n//           alert('회원가입이 완료되었습니다!')\n//           this.props.setMode(\"LOGIN\");\n//         } else{\n//           alert(json.isSuccess);\n//         }\n//       });\n//   };\n\n//   render() {\n//     const { id, password, password2 } = this.state;\n//     return (\n//       <>\n//         <h2 className=\"form\">회원가입</h2>\n\n//         <div className=\"form\">\n//           <p>\n//             <input\n//               className=\"login\"\n//               type=\"text\"\n//               name=\"id\"\n//               value={id}\n//               placeholder=\"아이디\"\n//               onChange={this.handleChange}\n//             />\n//           </p>\n//           <p>\n//             <input\n//               className=\"login\"\n//               type=\"password\"\n//               name=\"password\"\n//               value={password}\n//               placeholder=\"비밀번호\"\n//               onChange={this.handleChange}\n//             />\n//           </p>\n//           <p>\n//             <input\n//               className=\"login\"\n//               type=\"password\"\n//               name=\"password2\"\n//               value={password2}\n//               placeholder=\"비밀번호 확인\"\n//               onChange={this.handleChange}\n//             />\n//           </p>\n\n//           <p>\n//             <input\n//               className=\"btn\"\n//               type=\"submit\"\n//               value=\"회원가입\"\n//               onClick={this.handleSubmit}\n//             />\n//           </p>\n//         </div>\n\n//         <p className=\"form\">\n//           로그인화면으로 돌아가기  \n//           <button onClick={() => this.props.setMode(\"LOGIN\")}>로그인</button>\n//         </p>\n//       </>\n//     ); \n//   }\n// }\n\n// export default Signin;\n\nimport React, { Component } from 'react';\nimport './Login.css';\n\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      password: \"\",\n      password2: \"\"\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = () => {\n    const { id, password, password2 } = this.state;\n    if (password !== password2) {\n      alert(\"비밀번호가 일치하지 않습니다.\");\n      return;\n    }\n\n    const userData = {\n      userId: id,\n      userPassword: password,\n      userPassword2: password2,\n    };\n    fetch(\"/signin\", {\n      method: \"post\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if(json.isSuccess === \"True\"){\n          alert('회원가입이 완료되었습니다!')\n          this.props.setMode(\"LOGIN\");\n        } else{\n          alert(json.isSuccess);\n        }\n      });\n  };\n\n  render() {\n    const { id, password, password2 } = this.state;\n    return (\n      <Box className=\"background\">\n        <h2 className=\"form\">회원가입</h2>\n\n        <Box className=\"form\" component=\"form\" noValidate autoComplete=\"off\">\n          <TextField\n            className=\"login\"\n            type=\"text\"\n            name=\"id\"\n            value={id}\n            label=\"아이디\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n          />\n          <TextField\n            className=\"login\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            label=\"비밀번호\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n          />\n          <TextField\n            className=\"login\"\n            type=\"password\"\n            name=\"password2\"\n            value={password2}\n            label=\"비밀번호 확인\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n          />\n          <Box textAlign=\"center\" mt={2}>\n            <Button\n              className=\"btn\"\n              variant=\"contained\"\n              onClick={this.handleSubmit}\n            >\n              회원가입\n            </Button>\n          </Box>\n        </Box>\n\n        <p className=\"form\">\n          로그인화면으로 돌아가기  \n          <Button onClick={() => this.props.setMode(\"LOGIN\")}>로그인</Button>\n        </p>\n      </Box>\n    ); \n  }\n}\n\nexport default Signin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}