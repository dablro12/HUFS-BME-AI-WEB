{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/App.js\";\n// import './App.css';\n// import Customer from './components/Customer';\n// import DataAdd from './components/DataAdd';\n\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import CircularProgress from '@mui/material/CircularProgress'; //로딩 중 일 때 동그란 원이 나타나느 라이브러리\n// import Paper from '@mui/material/Paper';\n// import React, { Component } from 'react';\n\n// //App Bar 구현 라이브러리들\n// import { styled, alpha } from '@mui/material/styles';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import InputBase from '@mui/material/InputBase';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import SearchIcon from '@mui/icons-material/Search';\n// import Button from '@mui/material/Button'; \n\n// const Search = styled('div')(({ theme }) => ({\n//   position: 'relative',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginLeft: 0,\n//   width: '100%',\n//   [theme.breakpoints.up('sm')]: {\n//     marginLeft: theme.spacing(1),\n//     width: 'auto',\n//   },\n// }));\n\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\n//   padding: theme.spacing(0, 2),\n//   height: '100%',\n//   position: 'absolute',\n//   pointerEvents: 'none',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n// }));\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   width: '100%',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     // vertical padding + font size from searchIcon\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     [theme.breakpoints.up('sm')]: {\n//       width: '12ch',\n//       '&:focus': {\n//         width: '20ch',\n//       },\n//     },\n//   },\n// }));\n\n// class App extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       imageData: '',\n//       completed: 0,  //로딩될때 동그란 원이 로딩중임을 나타낼때 사용하기 위한 변수\n//       searchKeyword: ''\n//     } \n//   }\n\n//   stateRefresh = () => {\n//     this.setState({\n//       imageData: '',\n//       completed: 0,\n//       searchKeyword: ''\n//     });\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   componentDidMount() { //서버 api에서 data를 받아오는 함수\n//     this.timer = setInterval(this.progress, 800); //1000이 1초 -> 20은 0.02초\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   callApi = async () => {\n//     const response = await fetch('/api/main'); //주소에서 데이터 받아옴\n//     const body = await response.json(); //받아온 데이터를 json형태로 body에 저정함\n//     return body;\n//   }\n\n//   progress = () => { //로딩하는 원에 대한 함수\n//     const { completed } = this.state;\n//     this.setState({ completed: completed >= 100 ? 0 : completed + 10 });\n//   }\n\n//   handleValueChange = (e) => {\n//     let nextState = {};\n//     nextState[e.target.name] = e.target.value;\n//     this.setState(nextState);\n//   }\n\n//   handleInpainting = () => {\n//     // Inpainting 작업 시작 시 로딩 표시를 보이도록 설정\n//     this.setState({ loading: true, completed: 0 }); // completed 상태를 0으로 초기화\n\n//     fetch('/api/runInpaintingScript') // Inpainting 스크립트를 실행하는 요청을 보냄\n//       .then(response => {\n//         if (response.ok) {\n//           alert('Inpainting 작업이 성공적으로 실행되었습니다.');\n//           // Inpainting 작업이 완료된 후에 이미지 데이터를 다시 불러옴\n//           this.stateRefresh();\n//         } else {\n//           throw new Error('Inpainting 작업 실행에 실패했습니다.');\n//         }\n//       })\n//       .catch(error => {\n//         console.error('Inpainting 작업 실패:', error);\n//       })\n//       .finally(() => {\n//         // Inpainting 작업 완료 후 로딩 표시를 제거\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   render() {\n//     const filteredComponents = (data) => {\n//       data = data.filter((c) => {\n//         return c.name.indexOf(this.state.searchKeyword) > -1;\n//       });\n//       return data.map((c) => {\n//         return <Customer stateRefresh={this.stateRefresh} key = {c.id} id = {c.id} image={c.image} inpainted={c.image2} name={c.name} explanation={c.explanation} />\n//       });\n//     }\n//     const cellList = [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"];\n//     return (\n//       <div style={{ marginLeft: 10, marginRight: 10 }}>\n//         <Box sx={{ flexGrow: 1 }}>\n//           <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n//             <Toolbar>\n//               <IconButton\n//                 size=\"large\"\n//                 edge=\"start\"\n//                 color=\"inherit\"\n//                 aria-label=\"open drawer\"\n//                 sx={{ mr: 2 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//               <Typography\n//                 variant=\"h6\"\n//                 noWrap\n//                 component=\"div\"\n//                 sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n//               >\n//                 Image Inpainting WEB\n//               </Typography>\n//               <Search>\n//                 <SearchIconWrapper>\n//                   <SearchIcon />\n//                 </SearchIconWrapper>\n//                 <StyledInputBase\n//                   placeholder=\"Search\"\n//                   inputProps={{ 'aria-label': 'search' }}\n//                   name=\"searchKeyword\"\n//                   value={this.state.searchKeyword}\n//                   onChange={this.handleValueChange}\n//                 />\n//               </Search>\n//             </Toolbar>\n//           </AppBar>\n//         </Box><br />\n//         <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.stateRefresh} />\n\n//         <br />\n\n//         <Paper sx={{ width: \"100%\" }}>\n//           <Table sx={{ minWidth: '1080px' }}>\n//             <TableHead>\n//               <TableRow>\n//                 {cellList.map(c => {\n//                   return <TableCell sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n//                 })}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {this.state.imageData ?\n//                 filteredComponents(this.state.imageData) :\n//                 <TableRow>\n//                   <TableCell colSpan=\"6\" align=\"center\">\n//                     <CircularProgress variant=\"determinate\" value={this.state.completed} />\n//                   </TableCell>\n//                 </TableRow>\n//               }\n//             </TableBody>\n//           </Table>\n//         </Paper>\n//         <br/>\n//         <Button variant=\"contained\" color=\"primary\" onClick={this.handleInpainting} disabled={this.state.loading} >\n//           {this.state.loading ? 'Inpainting 작업 진행 중...' : 'Inpainting'}\n//         </Button>\n\n//       </div>\n\n//     );\n//   }\n// }\n\n// export default App;\n\nimport React, { Component } from 'react';\nimport LoginSignUp from './components/LoginSignUp';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableBody from '@mui/material/TableBody';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Paper from '@mui/material/Paper';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Button from '@mui/material/Button';\nimport Customer from './components/Customer';\nimport DataAdd from './components/DataAdd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = styled('div')(({\n  theme\n}) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\n  },\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(1),\n    width: 'auto'\n  }\n}));\n_c = Search;\nconst SearchIconWrapper = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}));\n_c2 = SearchIconWrapper;\nconst StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  color: 'inherit',\n  width: '100%',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\n_c3 = StyledInputBase;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.stateRefresh = () => {\n      this.setState({\n        imageData: '',\n        completed: 0,\n        searchKeyword: ''\n      });\n      this.callApi().then(res => this.setState({\n        imageData: res\n      })).catch(err => console.log(err));\n    };\n    this.callApi = async () => {\n      const response = await fetch('/api/main');\n      const body = await response.json();\n      return body;\n    };\n    this.progress = () => {\n      const {\n        completed\n      } = this.state;\n      this.setState({\n        completed: completed >= 100 ? 0 : completed + 10\n      });\n    };\n    this.handleValueChange = e => {\n      let nextState = {};\n      nextState[e.target.name] = e.target.value;\n      this.setState(nextState);\n    };\n    this.handleInpainting = () => {\n      this.setState({\n        loading: true,\n        completed: 0\n      });\n      fetch('/api/runInpaintingScript').then(response => {\n        if (response.ok) {\n          alert('Inpainting 작업이 성공적으로 실행되었습니다.');\n          this.stateRefresh();\n        } else {\n          throw new Error('Inpainting 작업 실행에 실패했습니다.');\n        }\n      }).catch(error => {\n        console.error('Inpainting 작업 실패:', error);\n      }).finally(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n    this.handleModeChange = mode => {\n      this.setState({\n        mode\n      });\n    };\n    this.state = {\n      mode: '',\n      imageData: null,\n      completed: 0,\n      searchKeyword: ''\n    };\n  }\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 800);\n    this.callApi().then(res => this.setState({\n      imageData: res\n    })).catch(err => console.log(err));\n  }\n  render() {\n    const {\n      mode,\n      imageData,\n      completed,\n      searchKeyword\n    } = this.state;\n    if (mode === 'WELCOME') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: 10,\n          marginRight: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(AppBar, {\n            position: \"static\",\n            sx: {\n              minWidth: '1080px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"large\",\n                edge: \"start\",\n                color: \"inherit\",\n                \"aria-label\": \"open drawer\",\n                sx: {\n                  mr: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                noWrap: true,\n                component: \"div\",\n                sx: {\n                  flexGrow: 1,\n                  display: {\n                    xs: 'none',\n                    sm: 'block'\n                  }\n                },\n                children: \"Image Inpainting WEB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Search, {\n                children: [/*#__PURE__*/_jsxDEV(SearchIconWrapper, {\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledInputBase, {\n                  placeholder: \"Search\",\n                  inputProps: {\n                    'aria-label': 'search'\n                  },\n                  name: \"searchKeyword\",\n                  value: searchKeyword,\n                  onChange: this.handleValueChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DataAdd, {\n          style: {\n            marginTop: 20,\n            marginBottom: 20,\n            display: 'flex',\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          stateRefresh: this.stateRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: '1080px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"].map(c => /*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    fontSize: '1.0rem'\n                  },\n                  children: c\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: imageData ? imageData.filter(c => c.name.indexOf(searchKeyword) > -1).map(c => /*#__PURE__*/_jsxDEV(Customer, {\n                stateRefresh: this.stateRefresh,\n                id: c.id,\n                image: c.image,\n                inpainted: c.image2,\n                name: c.name,\n                explanation: c.explanation\n              }, c.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: \"6\",\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    variant: \"determinate\",\n                    value: completed\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: this.handleInpainting,\n          disabled: this.state.loading,\n          children: this.state.loading ? 'Inpainting 작업 진행 중...' : 'Inpainting'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(LoginSignUp, {\n        onSuccess: () => this.handleModeChange('WELCOME')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 14\n      }, this);\n    }\n  }\n}\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"SearchIconWrapper\");\n$RefreshReg$(_c3, \"StyledInputBase\");","map":{"version":3,"names":["React","Component","LoginSignUp","TableRow","TableCell","Table","TableHead","TableBody","CircularProgress","Paper","styled","alpha","AppBar","Box","Toolbar","IconButton","Typography","InputBase","MenuIcon","SearchIcon","Button","Customer","DataAdd","jsxDEV","_jsxDEV","Search","theme","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","_c","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","_c2","StyledInputBase","color","paddingLeft","transition","transitions","create","_c3","App","constructor","props","stateRefresh","setState","imageData","completed","searchKeyword","callApi","then","res","catch","err","console","log","response","fetch","body","json","progress","state","handleValueChange","e","nextState","target","name","value","handleInpainting","loading","ok","alert","Error","error","finally","handleModeChange","mode","componentDidMount","timer","setInterval","render","style","marginRight","children","sx","flexGrow","minWidth","size","edge","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","noWrap","component","xs","sm","placeholder","inputProps","onChange","marginTop","marginBottom","map","c","fontSize","filter","indexOf","id","image","inpainted","image2","explanation","colSpan","align","onClick","disabled","onSuccess","$RefreshReg$"],"sources":["/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/App.js"],"sourcesContent":["// import './App.css';\n// import Customer from './components/Customer';\n// import DataAdd from './components/DataAdd';\n\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import CircularProgress from '@mui/material/CircularProgress'; //로딩 중 일 때 동그란 원이 나타나느 라이브러리\n// import Paper from '@mui/material/Paper';\n// import React, { Component } from 'react';\n\n// //App Bar 구현 라이브러리들\n// import { styled, alpha } from '@mui/material/styles';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import InputBase from '@mui/material/InputBase';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import SearchIcon from '@mui/icons-material/Search';\n// import Button from '@mui/material/Button'; \n\n// const Search = styled('div')(({ theme }) => ({\n//   position: 'relative',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginLeft: 0,\n//   width: '100%',\n//   [theme.breakpoints.up('sm')]: {\n//     marginLeft: theme.spacing(1),\n//     width: 'auto',\n//   },\n// }));\n\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\n//   padding: theme.spacing(0, 2),\n//   height: '100%',\n//   position: 'absolute',\n//   pointerEvents: 'none',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n// }));\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   width: '100%',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     // vertical padding + font size from searchIcon\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     [theme.breakpoints.up('sm')]: {\n//       width: '12ch',\n//       '&:focus': {\n//         width: '20ch',\n//       },\n//     },\n//   },\n// }));\n\n\n// class App extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       imageData: '',\n//       completed: 0,  //로딩될때 동그란 원이 로딩중임을 나타낼때 사용하기 위한 변수\n//       searchKeyword: ''\n//     } \n//   }\n\n//   stateRefresh = () => {\n//     this.setState({\n//       imageData: '',\n//       completed: 0,\n//       searchKeyword: ''\n//     });\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   componentDidMount() { //서버 api에서 data를 받아오는 함수\n//     this.timer = setInterval(this.progress, 800); //1000이 1초 -> 20은 0.02초\n//     this.callApi()\n//       .then(res => this.setState({ imageData: res }))\n//       .catch(err => console.log(err));\n//   }\n\n//   callApi = async () => {\n//     const response = await fetch('/api/main'); //주소에서 데이터 받아옴\n//     const body = await response.json(); //받아온 데이터를 json형태로 body에 저정함\n//     return body;\n//   }\n\n//   progress = () => { //로딩하는 원에 대한 함수\n//     const { completed } = this.state;\n//     this.setState({ completed: completed >= 100 ? 0 : completed + 10 });\n//   }\n\n//   handleValueChange = (e) => {\n//     let nextState = {};\n//     nextState[e.target.name] = e.target.value;\n//     this.setState(nextState);\n//   }\n\n//   handleInpainting = () => {\n//     // Inpainting 작업 시작 시 로딩 표시를 보이도록 설정\n//     this.setState({ loading: true, completed: 0 }); // completed 상태를 0으로 초기화\n  \n//     fetch('/api/runInpaintingScript') // Inpainting 스크립트를 실행하는 요청을 보냄\n//       .then(response => {\n//         if (response.ok) {\n//           alert('Inpainting 작업이 성공적으로 실행되었습니다.');\n//           // Inpainting 작업이 완료된 후에 이미지 데이터를 다시 불러옴\n//           this.stateRefresh();\n//         } else {\n//           throw new Error('Inpainting 작업 실행에 실패했습니다.');\n//         }\n//       })\n//       .catch(error => {\n//         console.error('Inpainting 작업 실패:', error);\n//       })\n//       .finally(() => {\n//         // Inpainting 작업 완료 후 로딩 표시를 제거\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   render() {\n//     const filteredComponents = (data) => {\n//       data = data.filter((c) => {\n//         return c.name.indexOf(this.state.searchKeyword) > -1;\n//       });\n//       return data.map((c) => {\n//         return <Customer stateRefresh={this.stateRefresh} key = {c.id} id = {c.id} image={c.image} inpainted={c.image2} name={c.name} explanation={c.explanation} />\n//       });\n//     }\n//     const cellList = [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"];\n//     return (\n//       <div style={{ marginLeft: 10, marginRight: 10 }}>\n//         <Box sx={{ flexGrow: 1 }}>\n//           <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n//             <Toolbar>\n//               <IconButton\n//                 size=\"large\"\n//                 edge=\"start\"\n//                 color=\"inherit\"\n//                 aria-label=\"open drawer\"\n//                 sx={{ mr: 2 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//               <Typography\n//                 variant=\"h6\"\n//                 noWrap\n//                 component=\"div\"\n//                 sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n//               >\n//                 Image Inpainting WEB\n//               </Typography>\n//               <Search>\n//                 <SearchIconWrapper>\n//                   <SearchIcon />\n//                 </SearchIconWrapper>\n//                 <StyledInputBase\n//                   placeholder=\"Search\"\n//                   inputProps={{ 'aria-label': 'search' }}\n//                   name=\"searchKeyword\"\n//                   value={this.state.searchKeyword}\n//                   onChange={this.handleValueChange}\n//                 />\n//               </Search>\n//             </Toolbar>\n//           </AppBar>\n//         </Box><br />\n//         <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.stateRefresh} />\n        \n//         <br />\n\n//         <Paper sx={{ width: \"100%\" }}>\n//           <Table sx={{ minWidth: '1080px' }}>\n//             <TableHead>\n//               <TableRow>\n//                 {cellList.map(c => {\n//                   return <TableCell sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n//                 })}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {this.state.imageData ?\n//                 filteredComponents(this.state.imageData) :\n//                 <TableRow>\n//                   <TableCell colSpan=\"6\" align=\"center\">\n//                     <CircularProgress variant=\"determinate\" value={this.state.completed} />\n//                   </TableCell>\n//                 </TableRow>\n//               }\n//             </TableBody>\n//           </Table>\n//         </Paper>\n//         <br/>\n//         <Button variant=\"contained\" color=\"primary\" onClick={this.handleInpainting} disabled={this.state.loading} >\n//           {this.state.loading ? 'Inpainting 작업 진행 중...' : 'Inpainting'}\n//         </Button>\n\n\n\n//       </div>\n\n//     );\n//   }\n// }\n\n// export default App;\n\nimport React, { Component } from 'react';\nimport LoginSignUp from './components/LoginSignUp';\n\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableBody from '@mui/material/TableBody';\nimport CircularProgress from '@mui/material/CircularProgress'; \nimport Paper from '@mui/material/Paper';\n\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Button from '@mui/material/Button'; \n\nimport Customer from './components/Customer';\nimport DataAdd from './components/DataAdd';\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(1),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  width: '100%',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: '',\n      imageData: null,\n      completed: 0,\n      searchKeyword: ''\n    };\n  }\n\n  stateRefresh = () => {\n    this.setState({\n      imageData: '',\n      completed: 0,\n      searchKeyword: ''\n    });\n    this.callApi()\n      .then(res => this.setState({ imageData: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 800); \n    this.callApi()\n      .then(res => this.setState({ imageData: res }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/main');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => { \n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 10 });\n  }\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  handleInpainting = () => {\n    this.setState({ loading: true, completed: 0 });\n  \n    fetch('/api/runInpaintingScript')\n      .then(response => {\n        if (response.ok) {\n          alert('Inpainting 작업이 성공적으로 실행되었습니다.');\n          this.stateRefresh();\n        } else {\n          throw new Error('Inpainting 작업 실행에 실패했습니다.');\n        }\n      })\n      .catch(error => {\n        console.error('Inpainting 작업 실패:', error);\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  handleModeChange = (mode) => {\n    this.setState({ mode });\n  }\n\n  render() {\n    const { mode, imageData, completed, searchKeyword } = this.state;\n\n    if (mode === 'WELCOME') {\n      return (\n        <div style={{ marginLeft: 10, marginRight: 10 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n              <Toolbar>\n                <IconButton\n                  size=\"large\"\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  sx={{ mr: 2 }}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography\n                  variant=\"h6\"\n                  noWrap\n                  component=\"div\"\n                  sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n                >\n                  Image Inpainting WEB\n                </Typography>\n                <Search>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    name=\"searchKeyword\"\n                    value={searchKeyword}\n                    onChange={this.handleValueChange}\n                  />\n                </Search>\n              </Toolbar>\n            </AppBar>\n          </Box><br />\n          <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.stateRefresh} />\n          \n          <br />\n\n          <Paper sx={{ width: \"100%\" }}>\n            <Table sx={{ minWidth: '1080px' }}>\n              <TableHead>\n                <TableRow>\n                  {[\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"].map(c => (\n                    <TableCell sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {imageData ? imageData\n                  .filter(c => c.name.indexOf(searchKeyword) > -1)\n                  .map(c => (\n                    <Customer stateRefresh={this.stateRefresh} key={c.id} id={c.id} image={c.image} inpainted={c.image2} name={c.name} explanation={c.explanation} />\n                  )) : (\n                    <TableRow>\n                      <TableCell colSpan=\"6\" align=\"center\">\n                        <CircularProgress variant=\"determinate\" value={completed} />\n                      </TableCell>\n                    </TableRow>\n                  )}\n              </TableBody>\n            </Table>\n          </Paper>\n          <br/>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleInpainting} disabled={this.state.loading} >\n            {this.state.loading ? 'Inpainting 작업 진행 중...' : 'Inpainting'}\n          </Button>\n        </div>\n      );\n    } else {\n      return <LoginSignUp onSuccess={() => this.handleModeChange('WELCOME')} />;\n    }\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAElD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}