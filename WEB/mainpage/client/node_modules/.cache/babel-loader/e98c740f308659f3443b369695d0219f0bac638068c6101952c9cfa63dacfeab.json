{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/LoginSignUp.js\";\n// import React, { useState, useEffect } from 'react';\n// import CircularProgress from '@mui/material/CircularProgress';\n// import Customer from './Customer';\n// import DataAdd from './DataAdd';\n// import Box from '@mui/material/Box';\n// import AppBar from '@mui/material/AppBar';\n// import Toolbar from '@mui/material/Toolbar';\n// import Typography from '@mui/material/Typography';\n// import IconButton from '@mui/material/IconButton';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import SearchIcon from '@mui/icons-material/Search';\n// import Paper from '@mui/material/Paper';\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import Button from '@mui/material/Button';\n// import { styled, alpha } from '@mui/material/styles';\n// import InputBase from '@mui/material/InputBase';\n// import './Login.css';\n// const Search = styled('div')(({ theme }) => ({\n//   position: 'relative',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginRight: theme.spacing(2),\n//   marginLeft: 0,\n//   width: '100%',\n//   [theme.breakpoints.up('sm')]: {\n//     marginLeft: theme.spacing(3),\n//     width: 'auto',\n//   },\n// }));\n\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\n//   padding: theme.spacing(0, 2),\n//   height: '100%',\n//   position: 'absolute',\n//   pointerEvents: 'none',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n// }));\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     // vertical padding + font size from searchIcon\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     width: '100%',\n//     [theme.breakpoints.up('md')]: {\n//       width: '20ch',\n//     },\n//   },\n// }));\n\n// function Login(props) {\n//   const [id, setId] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleLogin = () => {\n//     const userData = {\n//       userId: id,\n//       userPassword: password,\n//     };\n//     fetch(\"/login\", {\n//       method: \"post\",\n//       headers: {\n//         \"content-type\": \"application/json\",\n//       },\n//       body: JSON.stringify(userData),\n//     })\n//     .then((res) => res.json())\n//     .then((json) => {            \n//       if(json.isLogin === \"True\"){\n//         props.setMode(\"WELCOME\");\n//       } else {\n//         alert(json.isLogin);\n//       }\n//     });\n//   };\n\n//   return (\n//     <>\n//       <h2>로그인</h2>\n\n//       <div className=\"form\">\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"text\"\n//             name=\"username\"\n//             placeholder=\"아이디\"\n//             onChange={event => setId(event.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"password\"\n//             name=\"pwd\"\n//             placeholder=\"비밀번호\"\n//             onChange={event => setPassword(event.target.value)}\n//           />\n//         </p>\n\n//         <p>\n//           <input\n//             className=\"btn\"\n//             type=\"submit\"\n//             value=\"로그인\"\n//             onClick={handleLogin}\n//           />\n//         </p>\n//       </div>\n\n//       <p>\n//         계정이 없으신가요?  \n//         <button onClick={() => props.setMode(\"SIGNIN\")}>회원가입</button>\n//       </p>\n//     </>\n//   ); \n// }\n\n// function Signin(props) {\n//   const [id, setId] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [password2, setPassword2] = useState(\"\");\n\n//   return (\n//     <>\n//       <h2>회원가입</h2>\n\n//       <div className=\"form\">\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"text\"\n//             placeholder=\"아이디\"\n//             onChange={event => setId(event.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"password\"\n//             placeholder=\"비밀번호\"\n//             onChange={event => setPassword(event.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"password\"\n//             placeholder=\"비밀번호 확인\"\n//             onChange={event => setPassword2(event.target.value)}\n//           />\n//         </p>\n\n//         <p>\n//           <input\n//             className=\"btn\"\n//             type=\"submit\"\n//             value=\"회원가입\"\n//             onClick={() => {\n//               const userData = {\n//                 userId: id,\n//                 userPassword: password,\n//                 userPassword2: password2,\n//               };\n//               fetch(\"/signin\", {\n//                 method: \"post\",\n//                 headers: {\n//                   \"content-type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify(userData),\n//               })\n//                 .then((res) => res.json())\n//                 .then((json) => {\n//                   if(json.isSuccess === \"True\"){\n//                     alert('회원가입이 완료되었습니다!')\n//                     props.setMode(\"LOGIN\");\n//                   } else{\n//                     alert(json.isSuccess);\n//                   }\n//                 });\n//             }}\n//           />\n//         </p>\n//       </div>\n\n//       <p>\n//         로그인화면으로 돌아가기  \n//         <button onClick={() => props.setMode(\"LOGIN\")}>로그인</button>\n//       </p>\n//     </>\n//   ); \n// }\n\n// function LoginSignUp(props) {\n//   const [mode, setMode] = useState(\"\");\n\n//   useEffect(() => {\n//     fetch(\"/authcheck\")\n//       .then((res) => res.json())\n//       .then((json) => {        \n//         if (json.isLogin === \"True\") {\n//           setMode(\"WELCOME\");\n//         } else {\n//           setMode(\"LOGIN\");\n//         }\n//       });\n//   }, []); \n\n//   const handleLogout = () => {\n//     fetch(\"/logout\")\n//       .then((res) => res.json())\n//       .then((json) => {\n//         if (json.isSuccess === \"True\") {\n//           setMode(\"LOGIN\");\n//           document.cookie = \"userLoggedIn=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n//         } else {\n//           alert(json.isSuccess);\n//         }\n//       });\n//   };\n\n//   const [searchKeyword, setSearchKeyword] = useState(\"\");\n//   const [imageData, setImageData] = useState(null);\n\n//   useEffect(() => {\n//     fetch(\"/api/imageData\")\n//       .then(res => res.json())\n//       .then(res => setImageData(res))\n//       .catch(err => console.error(err));\n//   }, []);\n\n//   const handleValueChange = (e) => {\n//     setSearchKeyword(e.target.value);\n//   };\n\n//   const handleInpainting = () => {\n//     fetch(\"/inpainting\")\n//       .then((res) => res.json())\n//       .then((json) => {\n//         if (json.isSuccess === \"True\") {\n//           alert('이미지 inpainting에 성공했습니다!');\n//           window.location.reload();\n//         } else {\n//           alert(json.isSuccess);\n//         }\n//       });\n//   };\n\n//   let content = null;  \n\n//   if(mode === \"LOGIN\"){\n//     content = <Login setMode={setMode} /> \n//   } else if (mode === 'SIGNIN') {\n//     content = <Signin setMode={setMode} /> \n//   } else if (mode === 'WELCOME') {\n//     content = (\n//       <div style={{ marginLeft: 10, marginRight: 10 }}>\n//         <Box sx={{ flexGrow: 1 }}>\n//           <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n//             <Toolbar>\n//               <IconButton\n//                 size=\"large\"\n//                 edge=\"start\"\n//                 color=\"inherit\"\n//                 aria-label=\"open drawer\"\n//                 sx={{ mr: 2 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//               <Typography\n//                 variant=\"h6\"\n//                 noWrap\n//                 component=\"div\"\n//                 sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n//               >\n//                 Image Inpainting WEB\n//               </Typography>\n//               <Search>\n//                 <SearchIconWrapper>\n//                   <SearchIcon />\n//                 </SearchIconWrapper>\n//                 <StyledInputBase\n//                   placeholder=\"Search\"\n//                   inputProps={{ 'aria-label': 'search' }}\n//                   name=\"searchKeyword\"\n//                   value={searchKeyword}\n//                   onChange={handleValueChange}\n//                 />\n//               </Search>\n//             </Toolbar>\n//           </AppBar>\n//         </Box><br />\n//         <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={handleValueChange} />\n\n//         <br />\n\n//         <Paper sx={{ width: \"100%\" }}>\n//           <Table sx={{ minWidth: '1080px' }}>\n//             <TableHead>\n//               <TableRow>\n//                 {[\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"].map((c, index) => (\n//                   <TableCell key={index} sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n//                 ))}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {imageData ? imageData\n//                 .filter(c => c.name.indexOf(searchKeyword) > -1)\n//                 .map(c => (\n//                   <Customer stateRefresh={handleValueChange} key={c.id} id={c.id} image={c.image} inpainted_image={c.inpainted_image} name={c.name} explanation={c.explanation} />\n//                 )) : <TableRow><TableCell colSpan=\"6\" align=\"center\"><CircularProgress /></TableCell></TableRow>}\n//             </TableBody>\n//           </Table>\n//         </Paper><br />\n//         <Button onClick={handleInpainting} variant=\"contained\" color=\"primary\" >Inpainting</Button>\n//         <Button onClick={handleLogout} style={{ marginLeft: 20 }} variant=\"contained\" color=\"secondary\" >Logout</Button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <>\n//       <div className=\"background\">\n//         {content}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default LoginSignUp;\n\nimport React, { Component } from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Customer from './Customer';\nimport DataAdd from './DataAdd';\nimport Box from '@mui/material/Box';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Button from '@mui/material/Button';\nimport { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = styled('div')(({\n  theme\n}) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto'\n  }\n}));\n_c = Search;\nconst SearchIconWrapper = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}));\n_c2 = SearchIconWrapper;\nconst StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}));\n_c3 = StyledInputBase;\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = () => {\n      const {\n        id,\n        password\n      } = this.state;\n      const userData = {\n        userId: id,\n        userPassword: password\n      };\n      fetch(\"/login\", {\n        method: \"post\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      }).then(res => res.json()).then(json => {\n        if (json.isLogin === \"True\") {\n          this.props.setMode(\"WELCOME\");\n        } else {\n          alert(json.isLogin);\n        }\n      });\n    };\n    this.state = {\n      id: \"\",\n      password: \"\"\n    };\n  }\n  render() {\n    const {\n      id,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login\",\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"\\uC544\\uC774\\uB514\",\n            value: id,\n            onChange: event => this.setState({\n              id: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login\",\n            type: \"password\",\n            name: \"pwd\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            value: password,\n            onChange: event => this.setState({\n              password: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn\",\n            type: \"submit\",\n            value: \"\\uB85C\\uADF8\\uC778\",\n            onClick: this.handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694?\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.setMode(\"SIGNIN\"),\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSignin = () => {\n      const {\n        id,\n        password,\n        password2\n      } = this.state;\n      const userData = {\n        userId: id,\n        userPassword: password,\n        userPassword2: password2\n      };\n      fetch(\"/signin\", {\n        method: \"post\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      }).then(res => res.json()).then(json => {\n        if (json.isSuccess === \"True\") {\n          alert('회원가입이 완료되었습니다!');\n          this.props.setMode(\"LOGIN\");\n        } else {\n          alert(json.isSuccess);\n        }\n      });\n    };\n    this.state = {\n      id: \"\",\n      password: \"\",\n      password2: \"\"\n    };\n  }\n  render() {\n    const {\n      id,\n      password,\n      password2\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login\",\n            type: \"text\",\n            placeholder: \"\\uC544\\uC774\\uB514\",\n            value: id,\n            onChange: event => this.setState({\n              id: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login\",\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            value: password,\n            onChange: event => this.setState({\n              password: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login\",\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n            value: password2,\n            onChange: event => this.setState({\n              password2: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn\",\n            type: \"submit\",\n            value: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n            onClick: this.handleSignin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB85C\\uADF8\\uC778\\uD654\\uBA74\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.setMode(\"LOGIN\"),\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nclass LoginSignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = () => {\n      fetch(\"/logout\").then(res => res.json()).then(json => {\n        if (json.isSuccess === \"True\") {\n          this.setState({\n            mode: \"LOGIN\"\n          });\n          document.cookie = \"userLoggedIn=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        } else {\n          alert(json.isSuccess);\n        }\n      });\n    };\n    this.handleValueChange = e => {\n      this.setState({\n        searchKeyword: e.target.value\n      });\n    };\n    this.handleInpainting = () => {\n      fetch(\"/inpainting\").then(res => res.json()).then(json => {\n        if (json.isSuccess === \"True\") {\n          alert('이미지 inpainting에 성공했습니다!');\n          window.location.reload();\n        } else {\n          alert(json.isSuccess);\n        }\n      });\n    };\n    this.state = {\n      mode: \"\",\n      searchKeyword: \"\",\n      imageData: null\n    };\n  }\n  componentDidMount() {\n    fetch(\"/authcheck\").then(res => res.json()).then(json => {\n      if (json.isLogin === \"True\") {\n        this.setState({\n          mode: \"WELCOME\"\n        });\n      } else {\n        this.setState({\n          mode: \"LOGIN\"\n        });\n      }\n    });\n    fetch(\"/api/imageData\").then(res => res.json()).then(res => this.setState({\n      imageData: res\n    })).catch(err => console.error(err));\n  }\n  render() {\n    const {\n      mode,\n      searchKeyword,\n      imageData\n    } = this.state;\n    let content = null;\n    if (mode === \"LOGIN\") {\n      content = /*#__PURE__*/_jsxDEV(Login, {\n        setMode: mode => this.setState({\n          mode\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 17\n      }, this);\n    } else if (mode === 'SIGNIN') {\n      content = /*#__PURE__*/_jsxDEV(Signin, {\n        setMode: mode => this.setState({\n          mode\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 17\n      }, this);\n    } else if (mode === 'WELCOME') {\n      content = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: 10,\n          marginRight: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(AppBar, {\n            position: \"static\",\n            sx: {\n              minWidth: '1080px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"large\",\n                edge: \"start\",\n                color: \"inherit\",\n                \"aria-label\": \"open drawer\",\n                sx: {\n                  mr: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                noWrap: true,\n                component: \"div\",\n                sx: {\n                  flexGrow: 1,\n                  display: {\n                    xs: 'none',\n                    sm: 'block'\n                  }\n                },\n                children: \"Image Inpainting WEB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Search, {\n                children: [/*#__PURE__*/_jsxDEV(SearchIconWrapper, {\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledInputBase, {\n                  placeholder: \"Search\",\n                  inputProps: {\n                    'aria-label': 'search'\n                  },\n                  name: \"searchKeyword\",\n                  value: searchKeyword,\n                  onChange: this.handleValueChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DataAdd, {\n          style: {\n            marginTop: 20,\n            marginBottom: 20,\n            display: 'flex',\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          stateRefresh: this.handleValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: '1080px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"].map((c, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    fontSize: '1.0rem'\n                  },\n                  children: c\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: imageData ? imageData.filter(c => c.name.indexOf(searchKeyword) > -1).map(c => /*#__PURE__*/_jsxDEV(Customer, {\n                stateRefresh: this.handleValueChange,\n                id: c.id,\n                image: c.image,\n                inpainted_image: c.inpainted_image,\n                name: c.name,\n                explanation: c.explanation\n              }, c.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: \"6\",\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 72\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleInpainting,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Inpainting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleLogout,\n          style: {\n            marginLeft: 20\n          },\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default LoginSignUp;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"SearchIconWrapper\");\n$RefreshReg$(_c3, \"StyledInputBase\");","map":{"version":3,"names":["React","Component","CircularProgress","Customer","DataAdd","Box","AppBar","Toolbar","Typography","IconButton","MenuIcon","SearchIcon","Paper","Table","TableBody","TableCell","TableHead","TableRow","Button","styled","alpha","InputBase","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","theme","position","borderRadius","shape","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","_c","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","_c2","StyledInputBase","color","paddingLeft","transition","transitions","create","_c3","Login","constructor","props","handleLogin","id","password","state","userData","userId","userPassword","fetch","method","headers","body","JSON","stringify","then","res","json","isLogin","setMode","alert","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","name","placeholder","value","onChange","event","setState","target","onClick","Signin","handleSignin","password2","userPassword2","isSuccess","LoginSignUp","handleLogout","mode","document","cookie","handleValueChange","e","searchKeyword","handleInpainting","window","location","reload","imageData","componentDidMount","catch","err","console","error","content","style","sx","flexGrow","minWidth","size","edge","mr","variant","noWrap","component","xs","sm","inputProps","marginTop","marginBottom","stateRefresh","map","c","index","fontSize","filter","indexOf","image","inpainted_image","explanation","colSpan","align","$RefreshReg$"],"sources":["/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/LoginSignUp.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import CircularProgress from '@mui/material/CircularProgress';\n// import Customer from './Customer';\n// import DataAdd from './DataAdd';\n// import Box from '@mui/material/Box';\n// import AppBar from '@mui/material/AppBar';\n// import Toolbar from '@mui/material/Toolbar';\n// import Typography from '@mui/material/Typography';\n// import IconButton from '@mui/material/IconButton';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import SearchIcon from '@mui/icons-material/Search';\n// import Paper from '@mui/material/Paper';\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import Button from '@mui/material/Button';\n// import { styled, alpha } from '@mui/material/styles';\n// import InputBase from '@mui/material/InputBase';\n// import './Login.css';\n// const Search = styled('div')(({ theme }) => ({\n//   position: 'relative',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginRight: theme.spacing(2),\n//   marginLeft: 0,\n//   width: '100%',\n//   [theme.breakpoints.up('sm')]: {\n//     marginLeft: theme.spacing(3),\n//     width: 'auto',\n//   },\n// }));\n\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\n//   padding: theme.spacing(0, 2),\n//   height: '100%',\n//   position: 'absolute',\n//   pointerEvents: 'none',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n// }));\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     // vertical padding + font size from searchIcon\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     width: '100%',\n//     [theme.breakpoints.up('md')]: {\n//       width: '20ch',\n//     },\n//   },\n// }));\n\n// function Login(props) {\n//   const [id, setId] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n  \n//   const handleLogin = () => {\n//     const userData = {\n//       userId: id,\n//       userPassword: password,\n//     };\n//     fetch(\"/login\", {\n//       method: \"post\",\n//       headers: {\n//         \"content-type\": \"application/json\",\n//       },\n//       body: JSON.stringify(userData),\n//     })\n//     .then((res) => res.json())\n//     .then((json) => {            \n//       if(json.isLogin === \"True\"){\n//         props.setMode(\"WELCOME\");\n//       } else {\n//         alert(json.isLogin);\n//       }\n//     });\n//   };\n\n//   return (\n//     <>\n//       <h2>로그인</h2>\n\n//       <div className=\"form\">\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"text\"\n//             name=\"username\"\n//             placeholder=\"아이디\"\n//             onChange={event => setId(event.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"password\"\n//             name=\"pwd\"\n//             placeholder=\"비밀번호\"\n//             onChange={event => setPassword(event.target.value)}\n//           />\n//         </p>\n\n//         <p>\n//           <input\n//             className=\"btn\"\n//             type=\"submit\"\n//             value=\"로그인\"\n//             onClick={handleLogin}\n//           />\n//         </p>\n//       </div>\n\n//       <p>\n//         계정이 없으신가요?  \n//         <button onClick={() => props.setMode(\"SIGNIN\")}>회원가입</button>\n//       </p>\n//     </>\n//   ); \n// }\n\n// function Signin(props) {\n//   const [id, setId] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [password2, setPassword2] = useState(\"\");\n\n//   return (\n//     <>\n//       <h2>회원가입</h2>\n\n//       <div className=\"form\">\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"text\"\n//             placeholder=\"아이디\"\n//             onChange={event => setId(event.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"password\"\n//             placeholder=\"비밀번호\"\n//             onChange={event => setPassword(event.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <input\n//             className=\"login\"\n//             type=\"password\"\n//             placeholder=\"비밀번호 확인\"\n//             onChange={event => setPassword2(event.target.value)}\n//           />\n//         </p>\n\n//         <p>\n//           <input\n//             className=\"btn\"\n//             type=\"submit\"\n//             value=\"회원가입\"\n//             onClick={() => {\n//               const userData = {\n//                 userId: id,\n//                 userPassword: password,\n//                 userPassword2: password2,\n//               };\n//               fetch(\"/signin\", {\n//                 method: \"post\",\n//                 headers: {\n//                   \"content-type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify(userData),\n//               })\n//                 .then((res) => res.json())\n//                 .then((json) => {\n//                   if(json.isSuccess === \"True\"){\n//                     alert('회원가입이 완료되었습니다!')\n//                     props.setMode(\"LOGIN\");\n//                   } else{\n//                     alert(json.isSuccess);\n//                   }\n//                 });\n//             }}\n//           />\n//         </p>\n//       </div>\n\n//       <p>\n//         로그인화면으로 돌아가기  \n//         <button onClick={() => props.setMode(\"LOGIN\")}>로그인</button>\n//       </p>\n//     </>\n//   ); \n// }\n\n// function LoginSignUp(props) {\n//   const [mode, setMode] = useState(\"\");\n\n//   useEffect(() => {\n//     fetch(\"/authcheck\")\n//       .then((res) => res.json())\n//       .then((json) => {        \n//         if (json.isLogin === \"True\") {\n//           setMode(\"WELCOME\");\n//         } else {\n//           setMode(\"LOGIN\");\n//         }\n//       });\n//   }, []); \n\n//   const handleLogout = () => {\n//     fetch(\"/logout\")\n//       .then((res) => res.json())\n//       .then((json) => {\n//         if (json.isSuccess === \"True\") {\n//           setMode(\"LOGIN\");\n//           document.cookie = \"userLoggedIn=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n//         } else {\n//           alert(json.isSuccess);\n//         }\n//       });\n//   };\n\n//   const [searchKeyword, setSearchKeyword] = useState(\"\");\n//   const [imageData, setImageData] = useState(null);\n\n//   useEffect(() => {\n//     fetch(\"/api/imageData\")\n//       .then(res => res.json())\n//       .then(res => setImageData(res))\n//       .catch(err => console.error(err));\n//   }, []);\n\n//   const handleValueChange = (e) => {\n//     setSearchKeyword(e.target.value);\n//   };\n\n//   const handleInpainting = () => {\n//     fetch(\"/inpainting\")\n//       .then((res) => res.json())\n//       .then((json) => {\n//         if (json.isSuccess === \"True\") {\n//           alert('이미지 inpainting에 성공했습니다!');\n//           window.location.reload();\n//         } else {\n//           alert(json.isSuccess);\n//         }\n//       });\n//   };\n\n//   let content = null;  \n\n//   if(mode === \"LOGIN\"){\n//     content = <Login setMode={setMode} /> \n//   } else if (mode === 'SIGNIN') {\n//     content = <Signin setMode={setMode} /> \n//   } else if (mode === 'WELCOME') {\n//     content = (\n//       <div style={{ marginLeft: 10, marginRight: 10 }}>\n//         <Box sx={{ flexGrow: 1 }}>\n//           <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n//             <Toolbar>\n//               <IconButton\n//                 size=\"large\"\n//                 edge=\"start\"\n//                 color=\"inherit\"\n//                 aria-label=\"open drawer\"\n//                 sx={{ mr: 2 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//               <Typography\n//                 variant=\"h6\"\n//                 noWrap\n//                 component=\"div\"\n//                 sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n//               >\n//                 Image Inpainting WEB\n//               </Typography>\n//               <Search>\n//                 <SearchIconWrapper>\n//                   <SearchIcon />\n//                 </SearchIconWrapper>\n//                 <StyledInputBase\n//                   placeholder=\"Search\"\n//                   inputProps={{ 'aria-label': 'search' }}\n//                   name=\"searchKeyword\"\n//                   value={searchKeyword}\n//                   onChange={handleValueChange}\n//                 />\n//               </Search>\n//             </Toolbar>\n//           </AppBar>\n//         </Box><br />\n//         <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={handleValueChange} />\n        \n//         <br />\n\n//         <Paper sx={{ width: \"100%\" }}>\n//           <Table sx={{ minWidth: '1080px' }}>\n//             <TableHead>\n//               <TableRow>\n//                 {[\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"].map((c, index) => (\n//                   <TableCell key={index} sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n//                 ))}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {imageData ? imageData\n//                 .filter(c => c.name.indexOf(searchKeyword) > -1)\n//                 .map(c => (\n//                   <Customer stateRefresh={handleValueChange} key={c.id} id={c.id} image={c.image} inpainted_image={c.inpainted_image} name={c.name} explanation={c.explanation} />\n//                 )) : <TableRow><TableCell colSpan=\"6\" align=\"center\"><CircularProgress /></TableCell></TableRow>}\n//             </TableBody>\n//           </Table>\n//         </Paper><br />\n//         <Button onClick={handleInpainting} variant=\"contained\" color=\"primary\" >Inpainting</Button>\n//         <Button onClick={handleLogout} style={{ marginLeft: 20 }} variant=\"contained\" color=\"secondary\" >Logout</Button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <>\n//       <div className=\"background\">\n//         {content}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default LoginSignUp;\n\nimport React, { Component } from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Customer from './Customer';\nimport DataAdd from './DataAdd';\nimport Box from '@mui/material/Box';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Button from '@mui/material/Button';\nimport { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport './Login.css';\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      password: \"\",\n    };\n  }\n\n  handleLogin = () => {\n    const { id, password } = this.state;\n    const userData = {\n      userId: id,\n      userPassword: password,\n    };\n    fetch(\"/login\", {\n      method: \"post\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n    .then((res) => res.json())\n    .then((json) => {            \n      if(json.isLogin === \"True\"){\n        this.props.setMode(\"WELCOME\");\n      } else {\n        alert(json.isLogin);\n      }\n    });\n  };\n\n  render() {\n    const { id, password } = this.state;\n    return (\n      <>\n        <h2>로그인</h2>\n\n        <div className=\"form\">\n          <p>\n            <input\n              className=\"login\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"아이디\"\n              value={id}\n              onChange={event => this.setState({ id: event.target.value })}\n            />\n          </p>\n          <p>\n            <input\n              className=\"login\"\n              type=\"password\"\n              name=\"pwd\"\n              placeholder=\"비밀번호\"\n              value={password}\n              onChange={event => this.setState({ password: event.target.value })}\n            />\n          </p>\n\n          <p>\n            <input\n              className=\"btn\"\n              type=\"submit\"\n              value=\"로그인\"\n              onClick={this.handleLogin}\n            />\n          </p>\n        </div>\n\n        <p>\n          계정이 없으신가요?  \n          <button onClick={() => this.props.setMode(\"SIGNIN\")}>회원가입</button>\n        </p>\n      </>\n    ); \n  }\n}\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      password: \"\",\n      password2: \"\",\n    };\n  }\n\n  handleSignin = () => {\n    const { id, password, password2 } = this.state;\n    const userData = {\n      userId: id,\n      userPassword: password,\n      userPassword2: password2,\n    };\n    fetch(\"/signin\", {\n      method: \"post\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n    .then((res) => res.json())\n    .then((json) => {\n      if(json.isSuccess === \"True\"){\n        alert('회원가입이 완료되었습니다!')\n        this.props.setMode(\"LOGIN\");\n      } else{\n        alert(json.isSuccess);\n      }\n    });\n  };\n\n  render() {\n    const { id, password, password2 } = this.state;\n    return (\n      <>\n        <h2>회원가입</h2>\n\n        <div className=\"form\">\n          <p>\n            <input\n              className=\"login\"\n              type=\"text\"\n              placeholder=\"아이디\"\n              value={id}\n              onChange={event => this.setState({ id: event.target.value })}\n            />\n          </p>\n          <p>\n            <input\n              className=\"login\"\n              type=\"password\"\n              placeholder=\"비밀번호\"\n              value={password}\n              onChange={event => this.setState({ password: event.target.value })}\n            />\n          </p>\n          <p>\n            <input\n              className=\"login\"\n              type=\"password\"\n              placeholder=\"비밀번호 확인\"\n              value={password2}\n              onChange={event => this.setState({ password2: event.target.value })}\n            />\n          </p>\n\n          <p>\n            <input\n              className=\"btn\"\n              type=\"submit\"\n              value=\"회원가입\"\n              onClick={this.handleSignin}\n            />\n          </p>\n        </div>\n\n        <p>\n          로그인화면으로 돌아가기  \n          <button onClick={() => this.props.setMode(\"LOGIN\")}>로그인</button>\n        </p>\n      </>\n    ); \n  }\n}\n\nclass LoginSignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: \"\",\n      searchKeyword: \"\",\n      imageData: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/authcheck\")\n      .then((res) => res.json())\n      .then((json) => {        \n        if (json.isLogin === \"True\") {\n          this.setState({ mode: \"WELCOME\" });\n        } else {\n          this.setState({ mode: \"LOGIN\" });\n        }\n      });\n\n    fetch(\"/api/imageData\")\n      .then(res => res.json())\n      .then(res => this.setState({ imageData: res }))\n      .catch(err => console.error(err));\n  }\n\n  handleLogout = () => {\n    fetch(\"/logout\")\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.isSuccess === \"True\") {\n          this.setState({ mode: \"LOGIN\" });\n          document.cookie = \"userLoggedIn=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        } else {\n          alert(json.isSuccess);\n        }\n      });\n  };\n\n  handleValueChange = (e) => {\n    this.setState({ searchKeyword: e.target.value });\n  };\n\n  handleInpainting = () => {\n    fetch(\"/inpainting\")\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.isSuccess === \"True\") {\n          alert('이미지 inpainting에 성공했습니다!');\n          window.location.reload();\n        } else {\n          alert(json.isSuccess);\n        }\n      });\n  };\n\n  render() {\n    const { mode, searchKeyword, imageData } = this.state;\n    let content = null;  \n\n    if(mode === \"LOGIN\"){\n      content = <Login setMode={(mode) => this.setState({ mode })} /> \n    } else if (mode === 'SIGNIN') {\n      content = <Signin setMode={(mode) => this.setState({ mode })} /> \n    } else if (mode === 'WELCOME') {\n      content = (\n        <div style={{ marginLeft: 10, marginRight: 10 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\" sx={{ minWidth: '1080px' }}>\n              <Toolbar>\n                <IconButton\n                  size=\"large\"\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  sx={{ mr: 2 }}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography\n                  variant=\"h6\"\n                  noWrap\n                  component=\"div\"\n                  sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n                >\n                  Image Inpainting WEB\n                </Typography>\n                <Search>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    name=\"searchKeyword\"\n                    value={searchKeyword}\n                    onChange={this.handleValueChange}\n                  />\n                </Search>\n              </Toolbar>\n            </AppBar>\n          </Box><br />\n          <DataAdd style={{ marginTop: 20, marginBottom: 20, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }} stateRefresh={this.handleValueChange} />\n          \n          <br />\n\n          <Paper sx={{ width: \"100%\" }}>\n            <Table sx={{ minWidth: '1080px' }}>\n              <TableHead>\n                <TableRow>\n                  {[\"Number\", \"Original Image\", \"Inpainted Image\", \"Name\", \"Explanation\", \"Setting\"].map((c, index) => (\n                    <TableCell key={index} sx={{ fontSize: '1.0rem' }}>{c}</TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {imageData ? imageData\n                  .filter(c => c.name.indexOf(searchKeyword) > -1)\n                  .map(c => (\n                    <Customer stateRefresh={this.handleValueChange} key={c.id} id={c.id} image={c.image} inpainted_image={c.inpainted_image} name={c.name} explanation={c.explanation} />\n                  )) : <TableRow><TableCell colSpan=\"6\" align=\"center\"><CircularProgress /></TableCell></TableRow>}\n              </TableBody>\n            </Table>\n          </Paper><br />\n          <Button onClick={this.handleInpainting} variant=\"contained\" color=\"primary\" >Inpainting</Button>\n          <Button onClick={this.handleLogout} style={{ marginLeft: 20 }} variant=\"contained\" color=\"secondary\" >Logout</Button>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"background\">\n          {content}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default LoginSignUp;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}