{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login\",\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"\\uC544\\uC774\\uB514\",\n          onChange: event => setId(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login\",\n          type: \"password\",\n          name: \"pwd\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn\",\n          type: \"submit\",\n          value: \"\\uB85C\\uADF8\\uC778\",\n          onClick: () => {\n            const userData = {\n              userId: id,\n              userPassword: password\n            };\n            fetch(\"/login\", {\n              method: \"post\",\n              headers: {\n                \"content-type\": \"application/json\"\n              },\n              body: JSON.stringify(userData)\n            }).then(res => res.json()).then(json => {\n              if (json.isLogin === \"True\") {\n                props.setMode(\"WELCOME\");\n              } else {\n                alert(json.isLogin);\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694?\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.setMode(\"SIGNIN\"),\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"q6YKsEiQbB/HjLDjguOyUUblDf0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","props","_s","id","setId","password","setPassword","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","name","placeholder","onChange","event","target","value","onClick","userData","userId","userPassword","fetch","method","headers","body","JSON","stringify","then","res","json","isLogin","setMode","alert","_c","$RefreshReg$"],"sources":["/Users/jeong-yeongjin/HUFS-BME-AI-WEB/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Login.css';\n\nfunction Login(props) {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n  return (\n    <>\n      <h2>로그인</h2>\n\n      <div className=\"form\">\n        <p>\n          <input\n            className=\"login\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"아이디\"\n            onChange={event => setId(event.target.value)}\n          />\n        </p>\n        <p>\n          <input\n            className=\"login\"\n            type=\"password\"\n            name=\"pwd\"\n            placeholder=\"비밀번호\"\n            onChange={event => setPassword(event.target.value)}\n          />\n        </p>\n\n        <p>\n          <input\n            className=\"btn\"\n            type=\"submit\"\n            value=\"로그인\"\n            onClick={() => {\n              const userData = {\n                userId: id,\n                userPassword: password,\n              };\n              fetch(\"/login\", {\n                method: \"post\",\n                headers: {\n                  \"content-type\": \"application/json\",\n                },\n                body: JSON.stringify(userData),\n              })\n                .then((res) => res.json())\n                .then((json) => {            \n                  if(json.isLogin === \"True\"){\n                    props.setMode(\"WELCOME\");\n                  } else {\n                    alert(json.isLogin);\n                  }\n                });\n            }}\n          />\n        </p>\n      </div>\n\n      <p>\n        계정이 없으신가요?  \n        <button onClick={() => props.setMode(\"SIGNIN\")}>회원가입</button>\n      </p>\n    </>\n  ); \n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACEE,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEZd,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAL,QAAA,gBACnBV,OAAA;QAAAU,QAAA,eACEV,OAAA;UACEe,SAAS,EAAC,OAAO;UACjBC,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,oBAAK;UACjBC,QAAQ,EAAEC,KAAK,IAAIb,KAAK,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACJd,OAAA;QAAAU,QAAA,eACEV,OAAA;UACEe,SAAS,EAAC,OAAO;UACjBC,IAAI,EAAC,UAAU;UACfC,IAAI,EAAC,KAAK;UACVC,WAAW,EAAC,0BAAM;UAClBC,QAAQ,EAAEC,KAAK,IAAIX,WAAW,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEJd,OAAA;QAAAU,QAAA,eACEV,OAAA;UACEe,SAAS,EAAC,KAAK;UACfC,IAAI,EAAC,QAAQ;UACbM,KAAK,EAAC,oBAAK;UACXC,OAAO,EAAEA,CAAA,KAAM;YACb,MAAMC,QAAQ,GAAG;cACfC,MAAM,EAAEnB,EAAE;cACVoB,YAAY,EAAElB;YAChB,CAAC;YACDmB,KAAK,CAAC,QAAQ,EAAE;cACdC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;YAC/B,CAAC,CAAC,CACCS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEE,IAAI,IAAK;cACd,IAAGA,IAAI,CAACC,OAAO,KAAK,MAAM,EAAC;gBACzBhC,KAAK,CAACiC,OAAO,CAAC,SAAS,CAAC;cAC1B,CAAC,MAAM;gBACLC,KAAK,CAACH,IAAI,CAACC,OAAO,CAAC;cACrB;YACF,CAAC,CAAC;UACN;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENd,OAAA;MAAAU,QAAA,GAAG,oDAED,eAAAV,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMnB,KAAK,CAACiC,OAAO,CAAC,QAAQ,CAAE;QAAA3B,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA,eACJ,CAAC;AAEP;AAACT,EAAA,CAhEQF,KAAK;AAAAoC,EAAA,GAALpC,KAAK;AAkEd,eAAeA,KAAK;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}