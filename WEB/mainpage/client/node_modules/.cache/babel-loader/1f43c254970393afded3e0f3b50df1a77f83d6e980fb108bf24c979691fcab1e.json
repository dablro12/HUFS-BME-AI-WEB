{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yeongjin/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Customer.js\";\n// import React from 'react';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import DataDelete from './DataDelete';\n// import Dialog from '@mui/material/Dialog';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Button from '@mui/material/Button';\n// import Canvas from './Canvas';\n\n// class Customer extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         canvasVisible: false,\n//         backgroundImage: null,\n//         imageWidth: 0,\n//         imageHeight: 0,\n//       };\n//     }\n\n//     showCanvas = (image, width, height) => {\n//       this.setState({\n//         canvasVisible: true,\n//         backgroundImage: image,\n//         imageWidth: width,\n//         imageHeight: height,\n//       });\n//     };\n\n//     handleClose = () => {\n//       this.setState({ canvasVisible: false });\n//     };\n\n//     render() {\n//       return (\n//         <TableRow>\n//           <TableCell>{this.props.id}</TableCell>\n//           <TableCell>\n//             <img\n//               src={this.props.image}\n//               alt=\"profile\"\n//               onClick={(e) =>\n//                 this.showCanvas(\n//                   this.props.image,\n//                   e.target.naturalWidth,\n//                   e.target.naturalHeight\n//                 )\n//               }\n//               width='200'\n//             />\n//           </TableCell>\n//           <TableCell>\n//             <img src={this.props.inpainted} alt='profile'/>\n//           </TableCell>\n//           <TableCell>{this.props.name}</TableCell>\n//           <TableCell>{this.props.explanation}</TableCell>\n//           <TableCell>\n//             <DataDelete\n//               stateRefresh={this.props.stateRefresh}\n//               id={this.props.id}\n//             />\n//           </TableCell>\n//           <Dialog\n//             open={this.state.canvasVisible}\n//             onClose={this.handleClose}\n//             aria-labelledby=\"alert-dialog-title\"\n//             aria-describedby=\"alert-dialog-description\"\n//             maxWidth=\"xl\"\n//             fullWidth\n//           >\n//             <DialogTitle id=\"alert-dialog-title\">\n//               {\"Draw on Image\"}\n//             </DialogTitle>\n//             <DialogContent>\n//               <Canvas\n//                 backgroundImage={this.state.backgroundImage}\n//                 imageWidth={this.state.imageWidth}\n//                 imageHeight={this.state.imageHeight}\n//               />\n//             </DialogContent>\n//             <DialogActions>\n//               <Button onClick={this.handleClose} autoFocus>\n//                 Close\n//               </Button>\n//             </DialogActions>\n//           </Dialog>\n//         </TableRow>\n//       );\n//     }\n//   }\n\n//   export default Customer;\n\n// import React from 'react';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import DataDelete from './DataDelete';\n// import Dialog from '@mui/material/Dialog';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Button from '@mui/material/Button';\n// import Canvas from './Canvas';\n\n// class Customer extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       canvasVisible: false,\n//       backgroundImage: null,\n//       imageWidth: 0,\n//       imageHeight: 0,\n//       selectedImageName: null, // 선택된 이미지의 ID를 저장할 상태를 추가합니다.\n//     };\n//   }\n\n//   showCanvas = (image, width, height, name) => {\n//     this.setState({\n//       canvasVisible: true,\n//       backgroundImage: image,\n//       imageWidth: width,\n//       imageHeight: height,\n//       selectedImageName: name, // 이미지 ID를 상태에 저장합니다.\n//     });\n//   };\n\n//   handleClose = () => {\n//     this.setState({ canvasVisible: false });\n//   };\n\n//   render() {\n//     return (\n//       <TableRow>\n//         <TableCell>{this.props.id}</TableCell>\n//         <TableCell>\n//           <img\n//             src={this.props.image}\n//             alt=\"profile\"\n//             onClick={(e) =>\n//               this.showCanvas(\n//                 this.props.image,\n//                 e.target.naturalWidth,\n//                 e.target.naturalHeight,\n//                 this.props.name // 이미지 ID를 전달합니다.\n//               )\n//             }\n//             width='200'\n//           />\n//         </TableCell>\n//         <TableCell>\n//           <img src={this.props.inpainted} alt='profile'/>\n//         </TableCell>\n//         <TableCell>{this.props.name}</TableCell>\n//         <TableCell>{this.props.explanation}</TableCell>\n//         <TableCell>\n//           <DataDelete\n//             stateRefresh={this.props.stateRefresh}\n//             id={this.props.id}\n//           />\n//         </TableCell>\n//         <Dialog\n//           open={this.state.canvasVisible}\n//           onClose={this.handleClose}\n//           aria-labelledby=\"alert-dialog-title\"\n//           aria-describedby=\"alert-dialog-description\"\n//           maxWidth=\"xl\"\n//           fullWidth\n//         >\n//           <DialogTitle id=\"alert-dialog-title\">\n//             {\"Draw on Image\"}\n//           </DialogTitle>\n//           <DialogContent>\n//             <Canvas\n//               backgroundImage={this.state.backgroundImage}\n//               imageWidth={this.state.imageWidth}\n//               imageHeight={this.state.imageHeight}\n//               imageName={this.state.selectedImageName} // 이미지 ID를 전달합니다.\n//               updateMaskImage={this.props.stateRefresh} // 캔버스에서 마스크 이미지를 저장할 때 필요한 콜백 함수를 전달합니다.\n//             />\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={this.handleClose} autoFocus>\n//               Close\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n//       </TableRow>\n//     );\n//   }\n// }\n\n// export default Customer;\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFileChange = e => {\n      this.setState({\n        imageFile: e.target.files[0],\n        imageName: e.target.files[0].name.split('.')[0]\n      });\n    };\n    this.handleTextChange = e => {\n      this.setState({\n        explanation: e.target.value\n      });\n    };\n    this.handleUpload = () => {\n      const formData = new FormData();\n      formData.append('image', this.state.imageFile);\n      formData.append('name', this.state.imageName);\n      formData.append('explanation', this.state.explanation);\n      axios.post('/api/main', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        console.log(res);\n        this.getCustomers();\n        this.setState({\n          imageName: '',\n          imageFile: null,\n          explanation: ''\n        });\n      }).catch(err => console.log(err));\n    };\n    this.handleGenerateMask = () => {\n      const canvas = document.getElementById('canvas');\n      const maskImageDataURL = canvas.toDataURL('image/png');\n      const imageName = this.state.imageName;\n      axios.post('/api/saveImage', {\n        imageDataURL: maskImageDataURL,\n        imageName\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          maskImageURL: res.data.maskImagePath\n        });\n        alert('마스크 이미지가 저장되었습니다.');\n      }).catch(err => console.log(err));\n    };\n    this.handleMergeImages = () => {\n      axios.post('/api/mergeImages', {\n        originalImage: this.state.customers[0].image,\n        imageName: this.state.imageName\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          inpaintedImageURL: res.data.inpaintedImageURL\n        });\n        alert('이미지가 성공적으로 합쳐졌습니다.');\n      }).catch(err => console.log(err));\n    };\n    this.state = {\n      customers: [],\n      imageName: '',\n      imageFile: null,\n      explanation: '',\n      maskImageURL: '',\n      inpaintedImageURL: ''\n    };\n  }\n  componentDidMount() {\n    this.getCustomers();\n  }\n  getCustomers() {\n    axios.get('/api/main').then(res => {\n      this.setState({\n        customers: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n  render() {\n    const {\n      customers\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Explanation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), customers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: customer.image,\n                alt: customer.name,\n                width: \"100\",\n                height: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: customer.explanation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.handleDelete(customer.id),\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, customer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC774\\uB984\",\n          value: this.state.imageName,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC124\\uBA85\",\n          value: this.state.explanation,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleUpload,\n          children: \"\\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB9C8\\uC2A4\\uD06C \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\",\n        width: \"400\",\n        height: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleGenerateMask,\n        children: \"\\uB9C8\\uC2A4\\uD06C \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uD569\\uCE58\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleMergeImages,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uD569\\uCE58\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.inpaintedImageURL,\n        alt: \"inpainted\",\n        width: \"100\",\n        height: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Customer;","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Customer","constructor","props","handleFileChange","e","setState","imageFile","target","files","imageName","name","split","handleTextChange","explanation","value","handleUpload","formData","FormData","append","state","post","headers","then","res","console","log","getCustomers","catch","err","handleGenerateMask","canvas","document","getElementById","maskImageDataURL","toDataURL","imageDataURL","maskImageURL","data","maskImagePath","alert","handleMergeImages","originalImage","customers","image","inpaintedImageURL","componentDidMount","get","render","children","fileName","_jsxFileName","lineNumber","columnNumber","border","map","customer","src","alt","width","height","onClick","handleDelete","id","type","onChange","placeholder"],"sources":["/Users/jeong-yeongjin/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Customer.js"],"sourcesContent":["// import React from 'react';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import DataDelete from './DataDelete';\n// import Dialog from '@mui/material/Dialog';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Button from '@mui/material/Button';\n// import Canvas from './Canvas';\n\n// class Customer extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         canvasVisible: false,\n//         backgroundImage: null,\n//         imageWidth: 0,\n//         imageHeight: 0,\n//       };\n//     }\n  \n//     showCanvas = (image, width, height) => {\n//       this.setState({\n//         canvasVisible: true,\n//         backgroundImage: image,\n//         imageWidth: width,\n//         imageHeight: height,\n//       });\n//     };\n  \n//     handleClose = () => {\n//       this.setState({ canvasVisible: false });\n//     };\n  \n//     render() {\n//       return (\n//         <TableRow>\n//           <TableCell>{this.props.id}</TableCell>\n//           <TableCell>\n//             <img\n//               src={this.props.image}\n//               alt=\"profile\"\n//               onClick={(e) =>\n//                 this.showCanvas(\n//                   this.props.image,\n//                   e.target.naturalWidth,\n//                   e.target.naturalHeight\n//                 )\n//               }\n//               width='200'\n//             />\n//           </TableCell>\n//           <TableCell>\n//             <img src={this.props.inpainted} alt='profile'/>\n//           </TableCell>\n//           <TableCell>{this.props.name}</TableCell>\n//           <TableCell>{this.props.explanation}</TableCell>\n//           <TableCell>\n//             <DataDelete\n//               stateRefresh={this.props.stateRefresh}\n//               id={this.props.id}\n//             />\n//           </TableCell>\n//           <Dialog\n//             open={this.state.canvasVisible}\n//             onClose={this.handleClose}\n//             aria-labelledby=\"alert-dialog-title\"\n//             aria-describedby=\"alert-dialog-description\"\n//             maxWidth=\"xl\"\n//             fullWidth\n//           >\n//             <DialogTitle id=\"alert-dialog-title\">\n//               {\"Draw on Image\"}\n//             </DialogTitle>\n//             <DialogContent>\n//               <Canvas\n//                 backgroundImage={this.state.backgroundImage}\n//                 imageWidth={this.state.imageWidth}\n//                 imageHeight={this.state.imageHeight}\n//               />\n//             </DialogContent>\n//             <DialogActions>\n//               <Button onClick={this.handleClose} autoFocus>\n//                 Close\n//               </Button>\n//             </DialogActions>\n//           </Dialog>\n//         </TableRow>\n//       );\n//     }\n//   }\n  \n//   export default Customer;\n\n// import React from 'react';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import DataDelete from './DataDelete';\n// import Dialog from '@mui/material/Dialog';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Button from '@mui/material/Button';\n// import Canvas from './Canvas';\n\n// class Customer extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       canvasVisible: false,\n//       backgroundImage: null,\n//       imageWidth: 0,\n//       imageHeight: 0,\n//       selectedImageName: null, // 선택된 이미지의 ID를 저장할 상태를 추가합니다.\n//     };\n//   }\n\n//   showCanvas = (image, width, height, name) => {\n//     this.setState({\n//       canvasVisible: true,\n//       backgroundImage: image,\n//       imageWidth: width,\n//       imageHeight: height,\n//       selectedImageName: name, // 이미지 ID를 상태에 저장합니다.\n//     });\n//   };\n\n//   handleClose = () => {\n//     this.setState({ canvasVisible: false });\n//   };\n\n//   render() {\n//     return (\n//       <TableRow>\n//         <TableCell>{this.props.id}</TableCell>\n//         <TableCell>\n//           <img\n//             src={this.props.image}\n//             alt=\"profile\"\n//             onClick={(e) =>\n//               this.showCanvas(\n//                 this.props.image,\n//                 e.target.naturalWidth,\n//                 e.target.naturalHeight,\n//                 this.props.name // 이미지 ID를 전달합니다.\n//               )\n//             }\n//             width='200'\n//           />\n//         </TableCell>\n//         <TableCell>\n//           <img src={this.props.inpainted} alt='profile'/>\n//         </TableCell>\n//         <TableCell>{this.props.name}</TableCell>\n//         <TableCell>{this.props.explanation}</TableCell>\n//         <TableCell>\n//           <DataDelete\n//             stateRefresh={this.props.stateRefresh}\n//             id={this.props.id}\n//           />\n//         </TableCell>\n//         <Dialog\n//           open={this.state.canvasVisible}\n//           onClose={this.handleClose}\n//           aria-labelledby=\"alert-dialog-title\"\n//           aria-describedby=\"alert-dialog-description\"\n//           maxWidth=\"xl\"\n//           fullWidth\n//         >\n//           <DialogTitle id=\"alert-dialog-title\">\n//             {\"Draw on Image\"}\n//           </DialogTitle>\n//           <DialogContent>\n//             <Canvas\n//               backgroundImage={this.state.backgroundImage}\n//               imageWidth={this.state.imageWidth}\n//               imageHeight={this.state.imageHeight}\n//               imageName={this.state.selectedImageName} // 이미지 ID를 전달합니다.\n//               updateMaskImage={this.props.stateRefresh} // 캔버스에서 마스크 이미지를 저장할 때 필요한 콜백 함수를 전달합니다.\n//             />\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={this.handleClose} autoFocus>\n//               Close\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n//       </TableRow>\n//     );\n//   }\n// }\n\n// export default Customer;\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: [],\n      imageName: '',\n      imageFile: null,\n      explanation: '',\n      maskImageURL: '',\n      inpaintedImageURL: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getCustomers();\n  }\n\n  getCustomers() {\n    axios\n      .get('/api/main')\n      .then((res) => {\n        this.setState({ customers: res.data });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  handleFileChange = (e) => {\n    this.setState({\n      imageFile: e.target.files[0],\n      imageName: e.target.files[0].name.split('.')[0],\n    });\n  };\n\n  handleTextChange = (e) => {\n    this.setState({ explanation: e.target.value });\n  };\n\n  handleUpload = () => {\n    const formData = new FormData();\n    formData.append('image', this.state.imageFile);\n    formData.append('name', this.state.imageName);\n    formData.append('explanation', this.state.explanation);\n\n    axios\n      .post('/api/main', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        this.getCustomers();\n        this.setState({\n          imageName: '',\n          imageFile: null,\n          explanation: '',\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleGenerateMask = () => {\n    const canvas = document.getElementById('canvas');\n    const maskImageDataURL = canvas.toDataURL('image/png');\n    const imageName = this.state.imageName;\n\n    axios\n      .post('/api/saveImage', { imageDataURL: maskImageDataURL, imageName })\n      .then((res) => {\n        console.log(res);\n        this.setState({ maskImageURL: res.data.maskImagePath });\n        alert('마스크 이미지가 저장되었습니다.');\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleMergeImages = () => {\n    axios\n      .post('/api/mergeImages', {\n        originalImage: this.state.customers[0].image,\n        imageName: this.state.imageName,\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({ inpaintedImageURL: res.data.inpaintedImageURL });\n        alert('이미지가 성공적으로 합쳐졌습니다.');\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const { customers } = this.state;\n\n    return (\n      <div>\n        <h2>Customer</h2>\n        <table border=\"1\">\n          <tbody>\n            <tr>\n              <th>Image</th>\n              <th>Name</th>\n              <th>Explanation</th>\n            </tr>\n            {customers.map((customer) => (\n              <tr key={customer.id}>\n                <td>\n                  <img\n                    src={customer.image}\n                    alt={customer.name}\n                    width=\"100\"\n                    height=\"100\"\n                  />\n                </td>\n                <td>{customer.name}</td>\n                <td>{customer.explanation}</td>\n                <td>\n                  <button onClick={() => this.handleDelete(customer.id)}>\n                    삭제\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <hr />\n        <h3>이미지 업로드</h3>\n        <div>\n          <input type=\"file\" onChange={this.handleFileChange} />\n          <input\n            type=\"text\"\n            placeholder=\"이름\"\n            value={this.state.imageName}\n            onChange={this.handleTextChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"설명\"\n            value={this.state.explanation}\n            onChange={this.handleTextChange}\n          />\n          <button onClick={this.handleUpload}>업로드</button>\n        </div>\n        <hr />\n        <h3>마스크 생성</h3>\n        <canvas id=\"canvas\" width=\"400\" height=\"300\"></canvas>\n        <button onClick={this.handleGenerateMask}>마스크 생성</button>\n        <hr />\n        <h3>이미지 합치기</h3>\n        <button onClick={this.handleMergeImages}>이미지 합치기</button>\n        <img\n          src={this.state.inpaintedImageURL}\n          alt=\"inpainted\"\n          width=\"100\"\n          height=\"100\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Customer;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}