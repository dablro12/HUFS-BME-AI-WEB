{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yeongjin/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Customer.js\";\n// import React from 'react';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import DataDelete from './DataDelete';\n// import Dialog from '@mui/material/Dialog';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Button from '@mui/material/Button';\n// import Canvas from './Canvas';\n\n// class Customer extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         canvasVisible: false,\n//         backgroundImage: null,\n//         imageWidth: 0,\n//         imageHeight: 0,\n//       };\n//     }\n\n//     showCanvas = (image, width, height) => {\n//       this.setState({\n//         canvasVisible: true,\n//         backgroundImage: image,\n//         imageWidth: width,\n//         imageHeight: height,\n//       });\n//     };\n\n//     handleClose = () => {\n//       this.setState({ canvasVisible: false });\n//     };\n\n//     render() {\n//       return (\n//         <TableRow>\n//           <TableCell>{this.props.id}</TableCell>\n//           <TableCell>\n//             <img\n//               src={this.props.image}\n//               alt=\"profile\"\n//               onClick={(e) =>\n//                 this.showCanvas(\n//                   this.props.image,\n//                   e.target.naturalWidth,\n//                   e.target.naturalHeight\n//                 )\n//               }\n//               width='200'\n//             />\n//           </TableCell>\n//           <TableCell>\n//             <img src={this.props.inpainted} alt='profile'/>\n//           </TableCell>\n//           <TableCell>{this.props.name}</TableCell>\n//           <TableCell>{this.props.explanation}</TableCell>\n//           <TableCell>\n//             <DataDelete\n//               stateRefresh={this.props.stateRefresh}\n//               id={this.props.id}\n//             />\n//           </TableCell>\n//           <Dialog\n//             open={this.state.canvasVisible}\n//             onClose={this.handleClose}\n//             aria-labelledby=\"alert-dialog-title\"\n//             aria-describedby=\"alert-dialog-description\"\n//             maxWidth=\"xl\"\n//             fullWidth\n//           >\n//             <DialogTitle id=\"alert-dialog-title\">\n//               {\"Draw on Image\"}\n//             </DialogTitle>\n//             <DialogContent>\n//               <Canvas\n//                 backgroundImage={this.state.backgroundImage}\n//                 imageWidth={this.state.imageWidth}\n//                 imageHeight={this.state.imageHeight}\n//               />\n//             </DialogContent>\n//             <DialogActions>\n//               <Button onClick={this.handleClose} autoFocus>\n//                 Close\n//               </Button>\n//             </DialogActions>\n//           </Dialog>\n//         </TableRow>\n//       );\n//     }\n//   }\n\n//   export default Customer;\n\nimport React from 'react';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport DataDelete from './DataDelete';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport Canvas from './Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Customer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showCanvas = (image, width, height, id) => {\n      this.setState({\n        canvasVisible: true,\n        backgroundImage: image,\n        imageWidth: width,\n        imageHeight: height,\n        selectedImageId: id // 이미지 ID를 상태에 저장합니다.\n      });\n    };\n    this.handleClose = () => {\n      this.setState({\n        canvasVisible: false\n      });\n    };\n    this.state = {\n      canvasVisible: false,\n      backgroundImage: null,\n      imageWidth: 0,\n      imageHeight: 0,\n      selectedImageId: null // 선택된 이미지의 ID를 저장할 상태를 추가합니다.\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: this.props.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.image,\n          alt: \"profile\",\n          onClick: e => this.showCanvas(this.props.image, e.target.naturalWidth, e.target.naturalHeight, this.props.id // 이미지 ID를 전달합니다.\n          ),\n          width: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.inpainted,\n          alt: \"profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: this.props.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(DataDelete, {\n          stateRefresh: this.props.stateRefresh,\n          id: this.props.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.canvasVisible,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        maxWidth: \"xl\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-title\",\n          children: \"Draw on Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Canvas, {\n            backgroundImage: this.state.backgroundImage,\n            imageWidth: this.state.imageWidth,\n            imageHeight: this.state.imageHeight,\n            imageId: this.state.selectedImageId // 이미지 ID를 전달합니다.\n            ,\n            updateMaskImage: this.props.stateRefresh // 캔버스에서 마스크 이미지를 저장할 때 필요한 콜백 함수를 전달합니다.\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleClose,\n            autoFocus: true,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Customer;","map":{"version":3,"names":["React","TableRow","TableCell","DataDelete","Dialog","DialogTitle","DialogContent","DialogActions","Button","Canvas","jsxDEV","_jsxDEV","Customer","Component","constructor","props","showCanvas","image","width","height","id","setState","canvasVisible","backgroundImage","imageWidth","imageHeight","selectedImageId","handleClose","state","render","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","e","target","naturalWidth","naturalHeight","inpainted","name","explanation","stateRefresh","open","onClose","maxWidth","fullWidth","imageId","updateMaskImage","autoFocus"],"sources":["/Users/jeong-yeongjin/HUFS-BME-AI-WEB/WEB/mainpage/client/src/components/Customer.js"],"sourcesContent":["// import React from 'react';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import DataDelete from './DataDelete';\n// import Dialog from '@mui/material/Dialog';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Button from '@mui/material/Button';\n// import Canvas from './Canvas';\n\n// class Customer extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         canvasVisible: false,\n//         backgroundImage: null,\n//         imageWidth: 0,\n//         imageHeight: 0,\n//       };\n//     }\n  \n//     showCanvas = (image, width, height) => {\n//       this.setState({\n//         canvasVisible: true,\n//         backgroundImage: image,\n//         imageWidth: width,\n//         imageHeight: height,\n//       });\n//     };\n  \n//     handleClose = () => {\n//       this.setState({ canvasVisible: false });\n//     };\n  \n//     render() {\n//       return (\n//         <TableRow>\n//           <TableCell>{this.props.id}</TableCell>\n//           <TableCell>\n//             <img\n//               src={this.props.image}\n//               alt=\"profile\"\n//               onClick={(e) =>\n//                 this.showCanvas(\n//                   this.props.image,\n//                   e.target.naturalWidth,\n//                   e.target.naturalHeight\n//                 )\n//               }\n//               width='200'\n//             />\n//           </TableCell>\n//           <TableCell>\n//             <img src={this.props.inpainted} alt='profile'/>\n//           </TableCell>\n//           <TableCell>{this.props.name}</TableCell>\n//           <TableCell>{this.props.explanation}</TableCell>\n//           <TableCell>\n//             <DataDelete\n//               stateRefresh={this.props.stateRefresh}\n//               id={this.props.id}\n//             />\n//           </TableCell>\n//           <Dialog\n//             open={this.state.canvasVisible}\n//             onClose={this.handleClose}\n//             aria-labelledby=\"alert-dialog-title\"\n//             aria-describedby=\"alert-dialog-description\"\n//             maxWidth=\"xl\"\n//             fullWidth\n//           >\n//             <DialogTitle id=\"alert-dialog-title\">\n//               {\"Draw on Image\"}\n//             </DialogTitle>\n//             <DialogContent>\n//               <Canvas\n//                 backgroundImage={this.state.backgroundImage}\n//                 imageWidth={this.state.imageWidth}\n//                 imageHeight={this.state.imageHeight}\n//               />\n//             </DialogContent>\n//             <DialogActions>\n//               <Button onClick={this.handleClose} autoFocus>\n//                 Close\n//               </Button>\n//             </DialogActions>\n//           </Dialog>\n//         </TableRow>\n//       );\n//     }\n//   }\n  \n//   export default Customer;\n\nimport React from 'react';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport DataDelete from './DataDelete';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport Canvas from './Canvas';\n\nclass Customer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasVisible: false,\n      backgroundImage: null,\n      imageWidth: 0,\n      imageHeight: 0,\n      selectedImageId: null, // 선택된 이미지의 ID를 저장할 상태를 추가합니다.\n    };\n  }\n\n  showCanvas = (image, width, height, id) => {\n    this.setState({\n      canvasVisible: true,\n      backgroundImage: image,\n      imageWidth: width,\n      imageHeight: height,\n      selectedImageId: id, // 이미지 ID를 상태에 저장합니다.\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ canvasVisible: false });\n  };\n\n  render() {\n    return (\n      <TableRow>\n        <TableCell>{this.props.id}</TableCell>\n        <TableCell>\n          <img\n            src={this.props.image}\n            alt=\"profile\"\n            onClick={(e) =>\n              this.showCanvas(\n                this.props.image,\n                e.target.naturalWidth,\n                e.target.naturalHeight,\n                this.props.id // 이미지 ID를 전달합니다.\n              )\n            }\n            width='200'\n          />\n        </TableCell>\n        <TableCell>\n          <img src={this.props.inpainted} alt='profile'/>\n        </TableCell>\n        <TableCell>{this.props.name}</TableCell>\n        <TableCell>{this.props.explanation}</TableCell>\n        <TableCell>\n          <DataDelete\n            stateRefresh={this.props.stateRefresh}\n            id={this.props.id}\n          />\n        </TableCell>\n        <Dialog\n          open={this.state.canvasVisible}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          maxWidth=\"xl\"\n          fullWidth\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Draw on Image\"}\n          </DialogTitle>\n          <DialogContent>\n            <Canvas\n              backgroundImage={this.state.backgroundImage}\n              imageWidth={this.state.imageWidth}\n              imageHeight={this.state.imageHeight}\n              imageId={this.state.selectedImageId} // 이미지 ID를 전달합니다.\n              updateMaskImage={this.props.stateRefresh} // 캔버스에서 마스크 이미지를 저장할 때 필요한 콜백 함수를 전달합니다.\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </TableRow>\n    );\n  }\n}\n\nexport default Customer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}